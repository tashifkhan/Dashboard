---
import Layout from "../../layouts/Layout.astro";
import { Github, ExternalLink } from "lucide-react";
import { allProjects, type Project } from "../../data/projects";
import MarkdownRenderer from "../../components/MarkdownRenderer.astro";

const { project } = Astro.props as { project: Project };

let decodedReadme = "";
if (project.readme) {
	decodedReadme = Buffer.from(project.readme, "base64").toString("utf-8");
}

export async function getStaticPaths() {
	return allProjects.map((project: Project) => ({
		params: { slug: project.slug },
		props: { project },
	}));
}
---

<Layout title={project.title}>
	<div
		class="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300 font-sans"
	>
		<header
			class="bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 transition-colors duration-300"
		>
			<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8">
				<a
					href="/#projects-tab"
					class="text-orange-600 dark:text-orange-400 cream:text-[var(--accent-color)] hover:underline mb-4 sm:mb-6 inline-block text-sm sm:text-base"
				>
					&larr; Back to Projects
				</a>
				<h1
					class="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-2"
				>
					{project.title}
				</h1>
				<p class="text-gray-600 dark:text-gray-400 mb-4 text-sm sm:text-base">
					{project.description}
				</p>
				<div class="flex flex-wrap gap-2 mb-4">
					{
						project.languages.map((lang: string) => (
							<span class="px-2 sm:px-3 py-1 bg-gray-200 dark:bg-gray-700 cream:bg-[var(--primary-color)] text-orange-600 dark:text-orange-400 cream:text-[var(--accent-color)] rounded-full text-xs sm:text-sm font-mono">
								{lang}
							</span>
						))
					}
				</div>
				<div
					class="flex flex-col sm:flex-row items-start sm:items-center space-y-2 sm:space-y-0 sm:space-x-4"
				>
					{
						project.live_website_url && (
							<a
								href={project.live_website_url}
								target="_blank"
								rel="noopener noreferrer"
								class="inline-flex items-center text-orange-600 dark:text-orange-400 cream:text-[var(--accent-color)] hover:text-orange-800 dark:hover:text-orange-300 cream:hover:text-[var(--accent-color-hover)] text-sm sm:text-base"
							>
								Live Site <ExternalLink size={16} className="ml-1.5" />
							</a>
						)
					}
					<a
						href={project.github_link}
						target="_blank"
						rel="noopener noreferrer"
						class="inline-flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300 text-sm sm:text-base"
					>
						GitHub <Github size={16} className="ml-1.5" />
					</a>
				</div>
			</div>
		</header>

		<main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8">
			<h2
				class="text-xl sm:text-2xl font-semibold text-gray-900 dark:text-white mb-4"
			>
				README
			</h2>
			{
				project.readme ? (
					<MarkdownRenderer
						content={decodedReadme}
						githubBaseUrl={project.github_link}
					/>
				) : (
					<p class="text-gray-600 dark:text-gray-400 text-sm sm:text-base">
						No README available for this project.
					</p>
				)
			}
		</main>
	</div>
</Layout>
