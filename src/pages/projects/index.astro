---
import Layout from "../../layouts/Layout.astro";
import ProjectFilters from "../../components/ProjectFilters";
import { Github, ExternalLink } from "lucide-react";
import { allProjects, type Project } from "../../data/projects";

const projects: Project[] = allProjects;
---

<Layout title="Projects">
	<div
		class="relative min-h-screen bg-gradient-to-b from-gray-50 to-white dark:from-gray-950 dark:to-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300 font-sans"
	>
		<div
			class="pointer-events-none absolute inset-0 [mask-image:radial-gradient(80%_60%_at_50%_0%,black,transparent)]"
		>
			<div
				class="h-40 bg-gradient-to-b from-orange-200/40 to-transparent dark:from-orange-900/20"
			>
			</div>
		</div>

		<header
			class="relative bg-white/80 dark:bg-gray-900/80 backdrop-blur border-b border-gray-200/60 dark:border-gray-800/60 transition-colors duration-300"
		>
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8">
				<a
					href="/"
					class="text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300 hover:underline mb-4 sm:mb-6 inline-block text-sm sm:text-base font-medium"
				>
					&larr; Home
				</a>
				<h1
					class="text-3xl sm:text-4xl lg:text-5xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
				>
					Projects
				</h1>
				<p
					class="text-gray-600 dark:text-gray-300 text-base sm:text-lg leading-relaxed max-w-3xl"
				>
					Explore my latest projects and open-source contributions.
				</p>
			</div>
		</header>

		<main class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12">
			<div
				class="bg-white/80 dark:bg-gray-900/80 backdrop-blur-xl p-6 sm:p-8 lg:p-10 rounded-2xl border border-gray-200/50 dark:border-gray-700/50 shadow-lg"
			>
				<ProjectFilters client:load />

				<div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
					{
						projects.map((project) => (
							<a
								href={`/projects/${project.slug}`}
								class="group relative block no-underline overflow-hidden"
								data-project-item-card
								data-has-live-link={!!project.live_website_url}
							>
								<div class="absolute inset-0 bg-orange-500/10 dark:bg-orange-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />

								<div class="relative bg-white/80 dark:bg-gray-900/80 backdrop-blur-xl p-6 sm:p-8 rounded-2xl border border-gray-200/50 dark:border-gray-700/50 shadow-lg hover:shadow-lg transition-all duration-500 hover:-translate-y-2 hover:scale-[1.02] hover:border-orange-300/50 dark:hover:border-orange-400/50">
									<div class="absolute top-0 left-0 right-0 h-1 bg-orange-500 dark:bg-orange-400 rounded-t-2xl transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500" />

									<div class="relative z-10">
										<h3
											class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white font-mono mb-3 group-hover:text-orange-600 dark:group-hover:text-orange-400 transition-all duration-300"
											data-project-title
										>
											{project.title}
										</h3>

										<p
											class="text-gray-600 dark:text-gray-300 text-base leading-relaxed mb-6"
											data-project-description
										>
											{project.description}
										</p>

										<div class="flex flex-wrap gap-2 mb-6">
											{project.languages.map((lang) => (
												<span
													class="relative px-3 py-1.5 bg-gradient-to-r from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium border border-gray-200/60 dark:border-gray-600/60 hover:from-orange-50 hover:to-purple-50 dark:hover:from-orange-950/30 dark:hover:to-purple-950/30 hover:border-orange-300/60 dark:hover:border-orange-400/60 hover:text-orange-700 dark:hover:text-orange-300 transition-all duration-300 hover:scale-105"
													data-project-language
												>
													{lang}
												</span>
											))}
										</div>

										<div class="flex items-center space-x-6">
											{project.live_website_url && (
												<span
													class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white rounded-lg text-sm font-medium shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 cursor-pointer"
													data-live-link
													data-url={project.live_website_url}
												>
													<ExternalLink size={16} className="mr-2" />
													Live Demo
												</span>
											)}
											<span
												class="inline-flex items-center px-4 py-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium border border-gray-200 dark:border-gray-600 hover:border-gray-300 dark:hover:border-gray-500 transition-all duration-300 hover:scale-105 cursor-pointer"
												data-github-link
												data-url={project.github_link}
											>
												<Github size={16} className="mr-2" />
												Source
											</span>
										</div>
									</div>

									<div class="absolute top-4 right-4 w-12 h-12 bg-gradient-to-br from-orange-400/20 to-purple-400/20 rounded-full blur-xl group-hover:scale-150 transition-transform duration-700" />
									<div class="absolute bottom-4 left-4 w-8 h-8 bg-gradient-to-br from-purple-400/20 to-orange-400/20 rounded-full blur-lg group-hover:scale-125 transition-transform duration-500" />
								</div>
							</a>
						))
					}
				</div>
			</div>
		</main>
	</div>
</Layout>

<script>
	// Fuzzy and enhanced search copied to provide consistent filtering behavior
	function fuzzySearch(text: string, query: string): boolean {
		if (!query.trim()) return true;
		const textLower = text.toLowerCase();
		const queryLower = query.toLowerCase();
		if (textLower.includes(queryLower)) return true;
		let queryIndex = 0;
		for (
			let i = 0;
			i < textLower.length && queryIndex < queryLower.length;
			i++
		) {
			if (textLower[i] === queryLower[queryIndex]) queryIndex++;
		}
		return queryIndex === queryLower.length;
	}

	function enhancedSearch(text: string, query: string): boolean {
		if (!query.trim()) return true;
		const textLower = text.toLowerCase();
		const queryLower = query.toLowerCase();
		if (textLower.includes(queryLower)) return true;
		const words = textLower.split(/\s+/);
		const queryWords = queryLower.split(/\s+/);
		const allWordsFound = queryWords.every((qw: string) =>
			words.some((w: string) => w.includes(qw))
		);
		if (allWordsFound) return true;
		return fuzzySearch(textLower, queryLower);
	}

	// Listen for filter events from the ProjectFilters component
	document.addEventListener("project-search", (e: Event) => {
		const { term: searchTerm, showLiveOnly } = (e as CustomEvent).detail;
		const projectCards = document.querySelectorAll("[data-project-item-card]");
		projectCards.forEach((el) => {
			const card = el as HTMLElement;
			const title =
				card.querySelector("[data-project-title]")?.textContent || "";
			const description =
				card.querySelector("[data-project-description]")?.textContent || "";
			const languages = Array.from(
				card.querySelectorAll("[data-project-language]")
			).map((n) => n.textContent || "");
			const hasLiveLink =
				card.querySelector("[data-live-link]") !== null ||
				card.getAttribute("data-has-live-link") === "true";
			const titleMatch = enhancedSearch(title, searchTerm);
			const descriptionMatch = enhancedSearch(description, searchTerm);
			const languageMatch = languages.some((lang) =>
				enhancedSearch(lang, searchTerm)
			);
			const searchMatches = titleMatch || descriptionMatch || languageMatch;
			const liveFilter = !showLiveOnly || hasLiveLink;
			const matches = searchMatches && liveFilter;
			card.style.display = matches ? "" : "none";
		});
	});

	document.addEventListener("DOMContentLoaded", () => {
		// Apply initial filter state (show all projects by default)
		const initialSearchEvent = new CustomEvent("project-search", {
			detail: { term: "", showLiveOnly: false },
		});
		document.dispatchEvent(initialSearchEvent);

		// Handle external link clicks so they don't trigger the card navigation
		document.querySelectorAll("[data-live-link]").forEach((link) => {
			link.addEventListener("click", (e) => {
				e.preventDefault();
				e.stopPropagation();
				const url = link.getAttribute("data-url");
				if (url) window.open(url, "_blank");
			});
		});
		document.querySelectorAll("[data-github-link]").forEach((link) => {
			link.addEventListener("click", (e) => {
				e.preventDefault();
				e.stopPropagation();
				const url = link.getAttribute("data-url");
				if (url) window.open(url, "_blank");
			});
		});
	});
</script>
