---
import Layout from "../layouts/Layout.astro";
import ProjectFilters from "../components/ProjectFilters";
import BlogFilters from "../components/BlogFilters";
import BlogCard from "../components/BlogCard.astro";
import LeetCodeStats from "../components/LeetCodeStats.astro";
import GitHubStats from "../components/GitHubStats.astro";
import LeetCodeContests from "../components/LeetCodeContests.astro";
import LeetCodeBadges from "../components/LeetCodeBadges.astro";
import Resume from "../components/Resume.astro";
import {
	Github,
	Twitter,
	Linkedin,
	Mail,
	Code2,
	FolderOpen,
	BookOpen,
	Users,
	ExternalLink,
	Globe,
	FileText,
	ArrowUp,
	Trophy,
	Target,
	Award,
	BarChart3,
} from "lucide-react";
import { allProjects, type Project } from "../data/projects";
import { leetCodeData } from "../data/leetcode";
import { githubStats } from "../data/github";
import ProjectCard from "../components/ProjectCard.astro";

const projects: Project[] = allProjects;

// Fetch blog posts from external API
type RemotePost = {
	title: string;
	date: string; // ISO date
	author: string;
	socials: string[];
	tags: string[];
	excerpt: string;
	slug: string;
};

let blogPosts: RemotePost[] = [];
try {
	const res = await fetch("https://blog.tashif.codes/api/posts.json");
	if (res.ok) {
		blogPosts = (await res.json()) as RemotePost[];
		// Sort posts by date desc to ensure the latest is featured first
		blogPosts.sort(
			(a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()
		);
	} else {
		console.error(
			"Failed to fetch remote blog posts:",
			res.status,
			res.statusText
		);
	}
} catch (err) {
	console.error("Error fetching remote blog posts:", err);
}
const { profile } = leetCodeData;
const { stats, stars } = githubStats;

const numProjects = projects.length;
const numBlogPosts = blogPosts.length;
const totalCommits = stats?.totalCommits ?? 0;
const totalSolved = leetCodeData?.stats?.totalSolved ?? 0;
const liveProjectCount = projects.filter((p) => p.live_website_url).length;
const latestBlogDate = blogPosts[0]?.date ? new Date(blogPosts[0].date) : null;

// Use tags from remote posts as categories for filtering
const blogCategories = [
	...new Set(
		blogPosts.flatMap((post) => (Array.isArray(post.tags) ? post.tags : []))
	),
];

const socials = [
	{ icon: Github, link: "https://github.com/tashifkhan", label: "GitHub" },
	{ icon: Globe, link: "https://portfolio.tashif.codes", label: "Portfolio" },
	{
		icon: Linkedin,
		link: "https://www.linkedin.com/in/tashifkhan/",
		label: "LinkedIn",
	},
	{ icon: Twitter, link: "https://twitter.com/khan_tashif_", label: "Twitter" },
	{ icon: Mail, link: "mailto:tashif@duck.com", label: "Email" },
];
---

<Layout title="Tashif Ahmad Khan - Personal Dashboard">
	<div
		class="relative min-h-screen bg-gradient-to-b from-gray-50 to-white dark:from-gray-950 dark:to-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300 font-sans scroll-smooth"
	>
		<div
			class="pointer-events-none absolute inset-0 [mask-image:radial-gradient(80%_60%_at_50%_0%,black,transparent)]"
		>
			<div
				class="h-40 bg-gradient-to-b from-orange-200/40 to-transparent dark:from-orange-900/20"
			>
			</div>
		</div>
		<!-- Header -->
		<header
			class="sticky top-0 z-40 backdrop-blur supports-[backdrop-filter]:bg-white/70 dark:supports-[backdrop-filter]:bg-gray-900/60 bg-white/80 dark:bg-gray-900/70 border-b border-gray-200/60 dark:border-gray-800/60 shadow-sm"
		>
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3 sm:py-4">
				<div
					class="flex flex-col sm:flex-row justify-between items-center gap-4"
				>
					<div class="flex items-center space-x-5 overflow-visible">
						<span
							class="p-[2px] rounded-full bg-gradient-to-tr from-orange-500 via-rose-500 to-purple-600"
						>
							<span
								class="block rounded-full bg-white dark:bg-gray-900 p-[2px]"
							>
								<img
									src="https://avatars.githubusercontent.com/u/75897907?v=4"
									alt="Tashif Ahmad Khan"
									class="w-14 h-14 sm:w-16 sm:h-16 rounded-full object-cover block"
								/>
							</span>
						</span>
						<div>
							<h1
								class="text-2xl sm:text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
							>
								Tashif Ahmad Khan
							</h1>
							<p class="text-gray-600 dark:text-gray-300 text-sm">
								{profile.realName || "Software Developer"}
							</p>
						</div>
					</div>
					<div class="flex items-center space-x-1.5 sm:space-x-2">
						{
							socials.map((social) => (
								<a
									href={social.link}
									target="_blank"
									rel="noopener noreferrer"
									class="inline-flex p-2 rounded-full text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800/70 transition-colors focus:outline-none focus-visible:ring-2 focus-visible:ring-orange-500/60"
									aria-label={social.label}
								>
									<social.icon size={20} />
								</a>
							))
						}
					</div>
				</div>
			</div>
		</header>

		<!-- Navigation -->
		<nav
			class="sticky top-[56px] sm:top-[64px] z-30 backdrop-blur supports-[backdrop-filter]:bg-white/70 dark:supports-[backdrop-filter]:bg-gray-900/60 bg-white/80 dark:bg-gray-900/70 border-b border-gray-200/60 dark:border-gray-800/60 transition-colors duration-300 overflow-x-auto font-sans"
		>
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="flex space-x-1 sm:space-x-2 min-w-max py-2">
					<button
						id="projects-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-orange-500 text-orange-600 dark:text-orange-400 whitespace-nowrap bg-orange-50/60 dark:bg-orange-950/20"
					>
						<FolderOpen size={20} />
						<span>Projects</span>
					</button>
					<button
						id="blog-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-rose-700 dark:hover:text-rose-300 hover:border-rose-300/70 dark:hover:border-rose-700/60 transition-colors whitespace-nowrap hover:bg-rose-50/60 dark:hover:bg-rose-900/20"
					>
						<BookOpen size={20} />
						<span>Blog</span>
					</button>
					<button
						id="leetcode-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-purple-700 dark:hover:text-purple-300 hover:border-purple-300/70 dark:hover:border-purple-700/60 transition-colors whitespace-nowrap hover:bg-purple-50/60 dark:hover:bg-purple-900/20"
					>
						<Code2 size={20} />
						<span>LeetCode</span>
					</button>
					<button
						id="github-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-emerald-700 dark:hover:text-emerald-300 hover:border-emerald-300/70 dark:hover:border-emerald-700/60 transition-colors whitespace-nowrap hover:bg-emerald-50/60 dark:hover:bg-emerald-900/20"
					>
						<Github size={20} />
						<span>GitHub</span>
					</button>
					<button
						id="resume-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:border-gray-300 dark:hover:border-gray-600 transition-colors whitespace-nowrap hover:bg-gray-50 dark:hover:bg-gray-800/60"
					>
						<FileText size={20} />
						<span>Resume</span>
					</button>
					<button
						id="community-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:border-gray-300 dark:hover:border-gray-600 transition-colors whitespace-nowrap hover:bg-gray-50 dark:hover:bg-gray-800/60"
					>
						<Users size={20} />
						<span>Community</span>
					</button>
				</div>
			</div>
		</nav>

		<!-- Main Content -->
		<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8">
			<!-- Welcome restore pill (shown when banner is hidden) -->
			<div id="welcome-restore" class="mb-4 hidden">
				<button
					id="welcome-restore-btn"
					class="inline-flex items-center gap-2 px-3 py-1.5 rounded-full text-xs font-medium border border-gray-200/70 dark:border-gray-800/70 bg-white/60 dark:bg-gray-900/60 text-gray-700 dark:text-gray-200 hover:bg-white dark:hover:bg-gray-800/70 shadow-sm"
					aria-controls="welcome-banner"
				>
					<span class="inline-block h-2 w-2 rounded-full bg-orange-500"></span>
					Show welcome
				</button>
			</div>

			<!-- Minimal Welcome Banner -->
			<section id="welcome-banner" class="mb-8">
				<div
					class="relative overflow-hidden rounded-xl border border-gray-200/60 dark:border-gray-800/60 bg-white/70 dark:bg-gray-900/60 backdrop-blur p-4 sm:p-5"
				>
					<div class="flex items-start justify-between gap-3">
						<div class="min-w-0">
							<h2
								class="text-base sm:text-lg font-semibold tracking-tight mb-1"
							>
								Welcome
							</h2>
							<p class="text-gray-600 dark:text-gray-300 text-sm">
								Quick snapshot across Projects, Blog, GitHub and LeetCode.
							</p>
						</div>
						<button
							id="welcome-dismiss"
							class="ml-2 inline-flex items-center justify-center h-8 w-8 rounded-md text-gray-500 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200 hover:bg-gray-100/70 dark:hover:bg-gray-800/60 border border-transparent"
							aria-label="Dismiss welcome"
							aria-controls="welcome-banner"
						>
							<span aria-hidden="true">Ã—</span>
						</button>
					</div>
					<div class="mt-3 flex flex-wrap items-center gap-2">
						<!-- Compact stats pills -->
						<span
							class="inline-flex items-center gap-1.5 px-2.5 py-1 rounded-full text-xs border border-gray-200/70 dark:border-gray-800/70 bg-white/60 dark:bg-gray-900/60 text-gray-700 dark:text-gray-200"
						>
							<Code2 size={14} className="text-orange-500" />
							{numProjects} Projects
						</span>
						<span
							class="inline-flex items-center gap-1.5 px-2.5 py-1 rounded-full text-xs border border-gray-200/70 dark:border-gray-800/70 bg-white/60 dark:bg-gray-900/60 text-gray-700 dark:text-gray-200"
						>
							<BookOpen size={14} className="text-rose-500" />
							{numBlogPosts} Posts
						</span>
						<span
							class="inline-flex items-center gap-1.5 px-2.5 py-1 rounded-full text-xs border border-gray-200/70 dark:border-gray-800/70 bg-white/60 dark:bg-gray-900/60 text-gray-700 dark:text-gray-200"
						>
							<Github size={14} className="text-emerald-600" />
							{totalCommits} Commits
						</span>
						<span
							class="inline-flex items-center gap-1.5 px-2.5 py-1 rounded-full text-xs border border-gray-200/70 dark:border-gray-800/70 bg-white/60 dark:bg-gray-900/60 text-gray-700 dark:text-gray-200"
						>
							<Code2 size={14} className="text-purple-600" />
							{totalSolved} Solved
						</span>

						<!-- Tiny actions -->
						<span class="ml-auto inline-flex items-center gap-1">
							<a
								href="/resume"
								class="inline-flex items-center justify-center h-8 w-8 rounded-md text-orange-700 dark:text-orange-300 bg-orange-50 dark:bg-orange-950/20 border border-orange-200/60 dark:border-orange-800/60 hover:bg-orange-100 dark:hover:bg-orange-900/30"
								aria-label="View resume"
							>
								<FileText size={16} />
							</a>
							<a
								href="mailto:tashif@duck.com"
								class="inline-flex items-center justify-center h-8 w-8 rounded-md text-gray-700 dark:text-gray-200 border border-gray-200/60 dark:border-gray-700/60 hover:bg-gray-100/80 dark:hover:bg-gray-800/70"
								aria-label="Contact"
							>
								<Mail size={16} />
							</a>
						</span>
					</div>
				</div>
			</section>

			<!-- Projects Section -->
			<div id="projects-section">
				<!-- Header Card -->
				<div
					class="relative overflow-hidden rounded-2xl border border-gray-200/60 dark:border-gray-800/60 bg-gradient-to-br from-white/90 via-white/70 to-orange-50/70 dark:from-gray-900/80 dark:via-gray-900/60 dark:to-gray-900/70 backdrop-blur p-6 mb-8 hidden md:block"
				>
					<div
						class="absolute -top-24 -left-20 h-64 w-64 rounded-full bg-orange-200/40 dark:bg-orange-900/20 blur-3xl"
					>
					</div>
					<div
						class="relative flex flex-col md:flex-row md:items-center md:justify-between gap-6"
					>
						<div class="flex items-start gap-4">
							<div
								class="p-4 rounded-2xl bg-gradient-to-br from-orange-500/90 to-orange-600/90 shadow-md"
							>
								<Code2 className="w-8 h-8 text-white" />
							</div>
							<div>
								<h2
									class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
								>
									Projects Showcase
								</h2>
								<p class="text-gray-600 dark:text-gray-300 max-w-xl">
									A curated collection of things I've built â€“ open source
									libraries, experiments and product work. Filter by tech, live
									demos or starred lists.
								</p>
								<div class="mt-4 flex flex-wrap gap-2 text-xs">
									<span
										class="inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-orange-500/10 text-orange-700 dark:text-orange-300 border border-orange-500/30"
										>{numProjects} Total</span
									>
									<span
										class="inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-emerald-500/10 text-emerald-700 dark:text-emerald-300 border border-emerald-500/30"
										>{liveProjectCount} Live</span
									>
									{
										latestBlogDate && (
											<span class="inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-gray-500/10 text-gray-700 dark:text-gray-300 border border-gray-400/30">
												Updated {latestBlogDate.toLocaleDateString()}
											</span>
										)
									}
								</div>
							</div>
						</div>
						<div class="flex flex-col sm:flex-row gap-3">
							<a
								href="/projects"
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium bg-orange-600 text-white hover:bg-orange-500 shadow-sm transition-colors"
							>
								Full Projects Page <ExternalLink size={16} />
							</a>
							<a
								href="#blog-section"
								data-scroll-blog
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium border border-orange-500/40 text-orange-700 dark:text-orange-300 bg-orange-50/60 dark:bg-orange-900/20 hover:bg-orange-100/70 dark:hover:bg-orange-900/30 transition-colors"
							>
								Go to Blog <ExternalLink size={16} />
							</a>
						</div>
					</div>
				</div>

				<ProjectFilters client:load />
				<div
					class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 auto-rows-fr"
				>
					{
						projects.map((project) => (
							<div
								class="h-full"
								data-project-item-card
								data-has-live-link={Boolean(project.live_website_url)}
							>
								<ProjectCard project={project} />
							</div>
						))
					}
				</div>
			</div>

			<!-- Blog Section -->
			<div id="blog-section" class="hidden relative">
				<!-- Header Card -->
				<div
					class="relative overflow-hidden rounded-2xl border border-gray-200/60 dark:border-gray-800/60 bg-gradient-to-br from-white/90 via-white/70 to-rose-50/70 dark:from-gray-900/80 dark:via-gray-900/60 dark:to-gray-900/70 backdrop-blur p-6 mb-8 hidden md:block"
				>
					<div
						class="absolute -top-20 -right-16 h-56 w-56 rounded-full bg-rose-200/40 dark:bg-rose-900/20 blur-3xl"
					>
					</div>
					<div
						class="relative flex flex-col md:flex-row md:items-center md:justify-between gap-6"
					>
						<div class="flex items-start gap-4">
							<div
								class="p-4 rounded-2xl bg-gradient-to-br from-rose-500/90 to-rose-600/90 shadow-md"
							>
								<BookOpen className="w-8 h-8 text-white" />
							</div>
							<div>
								<h2
									class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
								>
									Latest Articles
								</h2>
								<p class="text-gray-600 dark:text-gray-300 max-w-xl">
									Insights, tutorials & engineering notes â€“ concise thoughts on
									building modern web experiences. Filter by tag or search
									titles.
								</p>
								<div class="mt-4 flex flex-wrap gap-2 text-xs">
									<span
										class="inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-rose-500/10 text-rose-700 dark:text-rose-300 border border-rose-500/30"
										>{numBlogPosts} Posts</span
									>
									{
										latestBlogDate && (
											<span class="inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-gray-500/10 text-gray-700 dark:text-gray-300 border border-gray-400/30">
												Updated {latestBlogDate.toLocaleDateString()}
											</span>
										)
									}
								</div>
							</div>
						</div>
						<div class="flex flex-col sm:flex-row gap-3">
							<a
								href="https://blog.tashif.codes"
								target="_blank"
								rel="noopener noreferrer"
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium bg-rose-600 text-white hover:bg-rose-500 shadow-sm transition-colors"
							>
								Full Blog <ExternalLink size={16} />
							</a>
							<a
								href="#projects-section"
								data-scroll-projects
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium border border-rose-500/40 text-rose-700 dark:text-rose-300 bg-rose-50/60 dark:bg-rose-900/20 hover:bg-rose-100/70 dark:hover:bg-rose-900/30 transition-colors"
							>
								Go to Projects <ExternalLink size={16} />
							</a>
						</div>
					</div>
				</div>
				<BlogFilters client:load categories={blogCategories} />
				{
					blogPosts.length > 0 ? (
						<div class="space-y-10">
							<section class="mb-4">
								<BlogCard post={blogPosts[0]} variant="featured" index={0} />
							</section>
							<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5">
								{blogPosts.slice(1).map((post, idx) => (
									<BlogCard post={post} variant="default" index={idx + 1} />
								))}
							</div>
							<div class="pt-10">
								<div class="mx-auto max-w-xl text-center space-y-4 border border-dashed border-gray-300/60 dark:border-gray-700/60 rounded-xl p-6 bg-white/60 dark:bg-gray-900/50 backdrop-blur">
									<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
										Want to read more?
									</h3>
									<p class="text-gray-600 dark:text-gray-300 text-sm leading-relaxed">
										Explore the full archive for inâ€‘depth guides & architecture
										notes. New posts are published regularly.
									</p>
									<a
										href="https://blog.tashif.codes"
										target="_blank"
										rel="noopener noreferrer"
										class="inline-flex items-center gap-2 rounded-md border border-rose-500/40 bg-rose-500/10 text-rose-700 dark:text-rose-300 px-4 py-2 text-sm font-medium hover:bg-rose-500/15 dark:border-rose-600/40 transition-colors"
									>
										Visit Blog <ExternalLink size={16} />
									</a>
								</div>
							</div>
						</div>
					) : (
						<div class="text-center py-14">
							<div class="inline-flex flex-col items-center gap-4 p-8 rounded-2xl bg-white/70 dark:bg-gray-900/50 backdrop-blur border border-gray-200/60 dark:border-gray-700/60">
								<div class="w-14 h-14 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center">
									<ExternalLink className="w-7 h-7 text-gray-400 dark:text-gray-500" />
								</div>
								<h3 class="text-base font-semibold text-gray-900 dark:text-white">
									No posts available
								</h3>
								<p class="text-gray-600 dark:text-gray-300 text-sm max-w-md">
									Unable to load blog posts from the external API. Try again
									later or visit the blog directly.
								</p>
								<a
									href="https://blog.tashif.codes"
									target="_blank"
									rel="noopener noreferrer"
									class="inline-flex items-center gap-2 px-4 py-2 rounded-md text-rose-600 dark:text-rose-400 hover:text-rose-700 dark:hover:text-rose-300 font-medium transition-colors text-sm"
								>
									Visit blog <ExternalLink size={15} />
								</a>
							</div>
						</div>
					)
				}
			</div>

			<!-- LeetCode Section -->
			<div id="leetcode-section" class="hidden space-y-8">
				<!-- Header Card -->
				<div
					class="relative overflow-hidden rounded-2xl border border-purple-200/60 dark:border-purple-800/40 bg-gradient-to-br from-white/90 via-purple-50/70 to-purple-100/60 dark:from-gray-900/80 dark:via-purple-950/40 dark:to-gray-900/70 backdrop-blur p-6 hidden md:block"
				>
					<div
						class="absolute -top-20 -right-16 h-56 w-56 rounded-full bg-purple-300/30 dark:bg-purple-900/30 blur-3xl"
					>
					</div>
					<div
						class="relative flex flex-col md:flex-row md:items-center md:justify-between gap-6"
					>
						<div class="flex items-start gap-4">
							<div
								class="p-4 rounded-2xl bg-gradient-to-br from-purple-500 to-purple-600 shadow-md"
							>
								<Trophy className="w-8 h-8 text-white" />
							</div>
							<div>
								<h2
									class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
								>
									LeetCode Profile
								</h2>
								<p class="text-gray-600 dark:text-gray-300 max-w-xl">
									Progress, contests and achievement highlights from the last
									year.
								</p>
							</div>
						</div>
						<div class="flex flex-col sm:flex-row gap-3">
							<a
								href="/leetcode"
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium bg-purple-600 text-white hover:bg-purple-500 shadow-sm transition-colors"
							>
								Full LeetCode Page <ExternalLink size={16} />
							</a>
							<a
								href="https://leetcode.com/"
								target="_blank"
								rel="noopener noreferrer"
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium border border-purple-500/40 text-purple-700 dark:text-purple-300 bg-purple-50/60 dark:bg-purple-900/20 hover:bg-purple-100/70 dark:hover:bg-purple-900/30 transition-colors"
							>
								Visit LeetCode <ExternalLink size={16} />
							</a>
						</div>
					</div>
				</div>

				<!-- Core Stats -->
				<LeetCodeStats />

				<!-- Secondary Panels -->
				<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
					<!-- Contests Panel -->
					<div
						class="relative overflow-hidden rounded-2xl border border-gray-200/60 dark:border-gray-800/60 bg-white/80 dark:bg-gray-900/60 backdrop-blur shadow-sm"
					>
						<div
							class="absolute -top-16 -left-16 h-40 w-40 rounded-full bg-yellow-200/40 dark:bg-yellow-900/20 blur-2xl"
						>
						</div>
						<div class="relative p-4 sm:p-6 h-full flex flex-col">
							<div class="flex items-center gap-3 mb-4">
								<Target
									className="w-5 h-5 text-yellow-600 dark:text-yellow-400"
								/>
								<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
									Recent Contests
								</h3>
							</div>
							<LeetCodeContests />
						</div>
					</div>

					<!-- Badges Panel -->
					<div
						class="relative overflow-hidden rounded-2xl border border-gray-200/60 dark:border-gray-800/60 bg-white/80 dark:bg-gray-900/60 backdrop-blur shadow-sm"
					>
						<div
							class="absolute -bottom-16 -right-16 h-40 w-40 rounded-full bg-purple-200/40 dark:bg-purple-900/20 blur-2xl"
						>
						</div>
						<div class="relative p-4 sm:p-6 h-full flex flex-col">
							<div class="flex items-center gap-3 mb-4">
								<Award
									className="w-5 h-5 text-purple-600 dark:text-purple-400"
								/>
								<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
									Achievement Badges
								</h3>
							</div>
							<LeetCodeBadges />
						</div>
					</div>
				</div>
			</div>

			<!-- GitHub Section -->
			<div id="github-section" class="hidden space-y-8">
				<!-- Header Card -->
				<div
					class="relative overflow-hidden rounded-2xl border border-emerald-200/60 dark:border-emerald-800/40 bg-gradient-to-br from-white/90 via-emerald-50/70 to-emerald-100/60 dark:from-gray-900/80 dark:via-emerald-950/40 dark:to-gray-900/70 backdrop-blur p-6 hidden md:block"
				>
					<div
						class="absolute -top-24 -right-20 h-64 w-64 rounded-full bg-emerald-300/30 dark:bg-emerald-900/30 blur-3xl"
					>
					</div>
					<div
						class="relative flex flex-col md:flex-row md:items-center md:justify-between gap-6"
					>
						<div class="flex items-start gap-4">
							<div
								class="p-4 rounded-2xl bg-gradient-to-br from-emerald-500 to-emerald-600 shadow-md"
							>
								<Github className="w-8 h-8 text-white" />
							</div>
							<div>
								<h2
									class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
								>
									GitHub Profile
								</h2>
								<p class="text-gray-600 dark:text-gray-300 max-w-xl">
									Open source velocity, activity and language distribution.
								</p>
							</div>
						</div>
						<div class="flex flex-col sm:flex-row gap-3">
							<a
								href="/github"
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium bg-emerald-600 text-white hover:bg-emerald-500 shadow-sm transition-colors"
							>
								Full GitHub Page <ExternalLink size={16} />
							</a>
							<a
								href="https://github.com/tashifkhan"
								target="_blank"
								rel="noopener noreferrer"
								class="inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2.5 text-sm font-medium border border-emerald-500/40 text-emerald-700 dark:text-emerald-300 bg-emerald-50/70 dark:bg-emerald-900/20 hover:bg-emerald-100/80 dark:hover:bg-emerald-900/30 transition-colors"
							>
								Visit Profile <ExternalLink size={16} />
							</a>
						</div>
					</div>
				</div>

				<!-- Stats + Graph / Languages etc. -->
				<GitHubStats />

				<!-- Callout: View Starred Lists in Projects -->
				<div
					class="rounded-2xl border border-emerald-300/50 dark:border-emerald-700/40 bg-emerald-50/60 dark:bg-emerald-900/20 backdrop-blur p-5 flex flex-col sm:flex-row items-start sm:items-center gap-4"
				>
					<div class="flex items-center gap-3">
						<BarChart3
							className="w-5 h-5 text-emerald-600 dark:text-emerald-400"
						/>
						<h3
							class="text-sm font-semibold text-emerald-700 dark:text-emerald-300 tracking-tight"
						>
							Star Lists â†’ Filter Projects
						</h3>
					</div>
					<p
						class="text-xs text-emerald-700/80 dark:text-emerald-300/70 flex-1 leading-relaxed"
					>
						Jump to a curated repository list in the Projects tab. Selecting a
						list will autoâ€‘filter the grid.
					</p>
					<button
						data-open-projects
						class="inline-flex items-center gap-1.5 px-3 py-1.5 rounded-md text-xs font-medium bg-emerald-600 text-white hover:bg-emerald-500 transition-colors"
					>
						Open Projects
					</button>
				</div>
			</div>

			<!-- Resume Section -->
			<div id="resume-section" class="hidden">
				<Resume />
			</div>

			<!-- Community Section -->
			<div id="community-section" class="hidden">
				<div class="mb-8">
					<h2
						class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
					>
						Community
					</h2>
					<p class="text-gray-600 dark:text-gray-300">
						Connect with the developer community
					</p>
				</div>

				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
					<div
						class="bg-white/70 dark:bg-gray-900/50 backdrop-blur p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg"
					>
						<div class="flex items-center space-x-3 mb-4">
							<Github className="w-6 h-6 text-gray-600 dark:text-gray-400" />
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
								GitHub
							</h3>
						</div>
						<p class="text-gray-600 dark:text-gray-300 mb-4">
							Follow my open source projects and contributions
						</p>
						<a
							href="https://github.com/tashifkhan"
							target="_blank"
							rel="noopener noreferrer"
							class="inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300"
						>
							Visit Profile <ExternalLink size={16} className="ml-1" />
						</a>
					</div>

					<div
						class="bg-white/70 dark:bg-gray-900/50 backdrop-blur p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg"
					>
						<div class="flex items-center space-x-3 mb-4">
							<Twitter className="w-6 h-6 text-gray-600 dark:text-gray-400" />
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
								Twitter
							</h3>
						</div>
						<p class="text-gray-600 dark:text-gray-300 mb-4">
							Follow for tech updates and coding insights
						</p>
						<a
							href="https://twitter.com/khan_tashif_"
							target="_blank"
							rel="noopener noreferrer"
							class="inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300"
						>
							Follow <ExternalLink size={16} className="ml-1" />
						</a>
					</div>

					<div
						class="bg-white/70 dark:bg-gray-900/50 backdrop-blur p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg"
					>
						<div class="flex items-center space-x-3 mb-4">
							<Linkedin className="w-6 h-6 text-gray-600 dark:text-gray-400" />
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
								LinkedIn
							</h3>
						</div>
						<p class="text-gray-600 dark:text-gray-300 mb-4">
							Connect professionally and view my experience
						</p>
						<a
							href="https://www.linkedin.com/in/tashif-ahmad-khan-982304244/"
							target="_blank"
							rel="noopener noreferrer"
							class="inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300"
						>
							Connect <ExternalLink size={16} className="ml-1" />
						</a>
					</div>
				</div>
			</div>
		</main>

		<!-- Scroll to top button -->
		<button
			id="scroll-top-btn"
			type="button"
			class="fixed bottom-6 right-6 z-40 inline-flex items-center justify-center h-11 w-11 rounded-full bg-white/80 dark:bg-gray-900/80 border border-gray-200/60 dark:border-gray-800/60 shadow-md text-gray-700 dark:text-gray-200 opacity-0 pointer-events-none transition-all hover:bg-white dark:hover:bg-gray-800/80 focus:outline-none focus-visible:ring-2 focus-visible:ring-orange-500/60"
			aria-label="Scroll to top"
		>
			<ArrowUp size={18} />
		</button>
	</div>
</Layout>

<script>
	// Tab switching logic
	const tabs = {
		projects: document.getElementById("projects-tab"),
		blog: document.getElementById("blog-tab"),
		leetcode: document.getElementById("leetcode-tab"),
		github: document.getElementById("github-tab"),
		resume: document.getElementById("resume-tab"),
		community: document.getElementById("community-tab"),
	};

	const sections = {
		projects: document.getElementById("projects-section"),
		blog: document.getElementById("blog-section"),
		leetcode: document.getElementById("leetcode-section"),
		github: document.getElementById("github-section"),
		resume: document.getElementById("resume-section"),
		community: document.getElementById("community-section"),
	};

	function activateTab(
		tabId: "projects" | "blog" | "leetcode" | "github" | "resume" | "community"
	) {
		// Map tab to its accent color classes
		const accentMap: Record<
			string,
			{ border: string; text: string; darkText: string; bg?: string }
		> = {
			projects: {
				border: "border-orange-500",
				text: "text-orange-600",
				darkText: "dark:text-orange-400",
			},
			blog: {
				border: "border-rose-500",
				text: "text-rose-600",
				darkText: "dark:text-rose-400",
			},
			leetcode: {
				border: "border-purple-500",
				text: "text-purple-600",
				darkText: "dark:text-purple-400",
			},
			github: {
				border: "border-emerald-500",
				text: "text-emerald-600",
				darkText: "dark:text-emerald-400",
			},
			resume: {
				border: "border-gray-500",
				text: "text-gray-700",
				darkText: "dark:text-gray-300",
			},
			community: {
				border: "border-gray-500",
				text: "text-gray-700",
				darkText: "dark:text-gray-300",
			},
		};

		Object.entries(tabs).forEach(([key, tab]) => {
			if (!tab) return;
			const accent = accentMap[key] || accentMap.projects;
			tab.classList.remove(accent.border, accent.text, accent.darkText);
			tab.classList.remove(
				"border-rose-500",
				"text-rose-600",
				"dark:text-rose-400",
				"border-purple-500",
				"text-purple-600",
				"dark:text-purple-400",
				"border-emerald-500",
				"text-emerald-600",
				"dark:text-emerald-400"
			);
			tab.classList.add(
				"border-transparent",
				"text-gray-600",
				"dark:text-gray-300"
			);
		});

		const activeTab = tabs[tabId];
		if (activeTab) {
			const accent = accentMap[tabId];
			activeTab.classList.remove(
				"border-transparent",
				"text-gray-600",
				"dark:text-gray-300"
			);
			activeTab.classList.add(accent.border, accent.text, accent.darkText);
		}

		Object.values(sections).forEach((section) => {
			if (!section) return;
			section.classList.add("hidden");
		});

		const activeSection = sections[tabId];
		if (activeSection) {
			activeSection.classList.remove("hidden");
		}
	}

	tabs.projects?.addEventListener("click", () => activateTab("projects"));
	tabs.blog?.addEventListener("click", () => activateTab("blog"));
	tabs.leetcode?.addEventListener("click", () => activateTab("leetcode"));
	tabs.github?.addEventListener("click", () => activateTab("github"));
	tabs.resume?.addEventListener("click", () => activateTab("resume"));
	tabs.community?.addEventListener("click", () => activateTab("community"));

	// Enhanced search functions
	function fuzzySearch(text: string, query: string): boolean {
		if (!query.trim()) return true;

		const textLower = text.toLowerCase();
		const queryLower = query.toLowerCase();

		// Exact match check
		if (textLower.includes(queryLower)) return true;

		// Fuzzy match using character sequence
		let queryIndex = 0;
		for (
			let i = 0;
			i < textLower.length && queryIndex < queryLower.length;
			i++
		) {
			if (textLower[i] === queryLower[queryIndex]) {
				queryIndex++;
			}
		}

		// If we found all characters in sequence, it's a fuzzy match
		return queryIndex === queryLower.length;
	}

	function enhancedSearch(
		text: string,
		query: string,
		exactOnly: boolean
	): boolean {
		if (!query.trim()) return true;

		const textLower = text.toLowerCase();
		const queryLower = query.toLowerCase();

		console.log(`Enhanced search: "${text}" vs "${query}"`);

		// 1. Exact substring match (highest priority)
		if (textLower.includes(queryLower)) {
			console.log("  -> Exact match found");
			return true;
		}

		// If exactOnly flag, skip deeper fuzzy logic
		if (exactOnly) return false;

		// 2. Word boundary match (matches whole words)
		const words = textLower.split(/\s+/);
		const queryWords = queryLower.split(/\s+/);

		// Check if all query words are found in text words
		const allWordsFound = queryWords.every((queryWord) =>
			words.some((word) => word.includes(queryWord))
		);
		if (allWordsFound) {
			console.log("  -> Word boundary match found");
			return true;
		}

		// 3. Fuzzy match (for typos and partial matches)
		const fuzzyResult = fuzzySearch(textLower, queryLower);
		console.log("  -> Fuzzy match result:", fuzzyResult);
		return fuzzyResult;
	}

	// Project search and filter functionality (exact matches first, then fuzzy)
	document.addEventListener("project-search", (e: Event) => {
		const { term: searchTerm, showLiveOnly, list } = (e as CustomEvent).detail;
		const query = (searchTerm || "").trim().toLowerCase();
		const projectCards = Array.from(
			document.querySelectorAll("[data-project-item-card]")
		);
		let liveProjectCount = 0;
		const exactMatches: HTMLElement[] = [];
		const fuzzyMatches: HTMLElement[] = [];

		projectCards.forEach((cardEl, index) => {
			const card = cardEl as HTMLElement;
			const title =
				card.querySelector("[data-project-title]")?.textContent || "";
			const description =
				card.querySelector("[data-project-description]")?.textContent || "";
			const languages = Array.from(
				card.querySelectorAll("[data-project-language]")
			).map((l) => l.textContent || "");
			const fields = [title, description, ...languages].map((f) =>
				f.toLowerCase()
			);
			const hasLiveLink =
				card.querySelector("[data-live-link]") !== null ||
				card.getAttribute("data-has-live-link") === "true";
			if (hasLiveLink) liveProjectCount++;

			// Star list filtering
			let listFilter = true;
			if (list && list !== "all-projects") {
				const repoName = card
					.querySelector("[data-github-link]")
					?.getAttribute("data-url")
					?.split("/")
					?.pop();
				// @ts-ignore
				const starLists = window.__STAR_LISTS__ as
					| { name: string; repositories?: string[] }[]
					| undefined;
				const selected = starLists?.find((l) => l.name === list);
				const repoNames = (selected?.repositories || []).map((r) =>
					r.split("/").pop()
				);
				listFilter = repoName ? repoNames.includes(repoName) : false;
			}

			let isExact = false;
			let isFuzzy = false;
			if (!query) {
				isExact = true; // treat empty query as exact so we skip reordering
			} else {
				isExact = fields.some((f) => f.includes(query));
				if (!isExact) {
					isFuzzy = fields.some((f) => fuzzySearch(f, query));
				}
			}

			const liveFilter = !showLiveOnly || hasLiveLink;
			const matches = (isExact || isFuzzy) && liveFilter && listFilter;
			card.style.display = matches ? "" : "none";

			if (matches) {
				if (isExact) exactMatches.push(card);
				else if (isFuzzy) fuzzyMatches.push(card);
			}
		});

		// Re-order DOM for non-empty queries: exact first then fuzzy
		if (query && projectCards.length) {
			const gridContainer = (projectCards[0] as HTMLElement).parentElement;
			if (gridContainer) {
				const frag = document.createDocumentFragment();
				exactMatches.forEach((card) => frag.appendChild(card));
				fuzzyMatches.forEach((card) => frag.appendChild(card));
				gridContainer.appendChild(frag);
			}
		}
	});

	// When a starred list is requested from GitHub section
	document.addEventListener("open-star-list", (e: Event) => {
		const name = (e as CustomEvent).detail?.name as string | undefined;
		if (!name) return;
		activateTab("projects");
		// store temporarily for ProjectFilters hydration listener
		localStorage.setItem("pending_star_list_select", name);
		// Attempt to update select if already mounted
		setTimeout(() => {
			const select = document.querySelector(
				"[data-project-list-select]"
			) as HTMLSelectElement | null;
			if (select) {
				select.value = name;
				select.dispatchEvent(new Event("change", { bubbles: true }));
			}
		}, 80);
	});

	// Blog search and filter functionality (title + tags)
	document.addEventListener("blog-search", (e: Event) => {
		const searchTerm = (e as CustomEvent).detail.term;
		const blogCards = document.querySelectorAll("[data-blog-card]");

		console.log("Blog search triggered with term:", searchTerm);
		console.log("Found blog cards:", blogCards.length);

		blogCards.forEach((card, index) => {
			const title = card.querySelector("[data-blog-title]")?.textContent || "";
			const tags = Array.from(card.querySelectorAll("[data-blog-tag]")).map(
				(el) => el.textContent || ""
			);

			console.log(
				`Card ${index}: title="${title}", tags=${JSON.stringify(tags)}`
			);

			// Use enhanced search for better matching
			const titleMatch = enhancedSearch(title, searchTerm, false);
			const tagMatch = tags.some((t) => enhancedSearch(t, searchTerm, false));

			const matches = titleMatch || tagMatch;
			console.log(
				`Card ${index} matches: ${matches} (titleMatch: ${titleMatch}, tagMatch: ${tagMatch})`
			);

			(card as HTMLElement).style.display = matches ? "block" : "none";
		});
	});

	document.addEventListener("blog-category", (e: Event) => {
		const category = (e as CustomEvent).detail.category;
		const blogCards = document.querySelectorAll("[data-blog-card]");

		console.log("Blog category filter triggered with category:", category);
		console.log("Found blog cards:", blogCards.length);

		blogCards.forEach((card, index) => {
			const tags = (card.getAttribute("data-blog-tags") || "")
				.split(",")
				.filter(Boolean);
			const matches = category === "all" || tags.includes(category);

			console.log(
				`Card ${index}: tags=${JSON.stringify(tags)}, matches: ${matches}`
			);

			(card as HTMLElement).style.display = matches ? "block" : "none";
		});
	});

	// Initialize filters and handle link clicks
	document.addEventListener("DOMContentLoaded", () => {
		const theme = localStorage.getItem("theme") || "light";
		document.documentElement.classList.toggle("dark", theme === "dark");

		// Initialize project filters with default state
		const projectCards = document.querySelectorAll("[data-project-item-card]");
		console.log(
			"Initializing project filters with",
			projectCards.length,
			"cards"
		);

		// Count live projects for debugging
		let liveProjectCount = 0;
		projectCards.forEach((card) => {
			const hasLiveLink =
				card.querySelector("[data-live-link]") !== null ||
				card.getAttribute("data-has-live-link") === "true";
			if (hasLiveLink) liveProjectCount++;
		});
		console.log("Total live projects found:", liveProjectCount);

		// Apply initial filter state (show all projects by default)
		const initialSearchEvent = new CustomEvent("project-search", {
			detail: { term: "", showLiveOnly: false },
		});
		document.dispatchEvent(initialSearchEvent);

		// Handle live link clicks
		document.querySelectorAll("[data-live-link]").forEach((link) => {
			link.addEventListener("click", (e) => {
				e.preventDefault();
				e.stopPropagation();
				const url = (link as HTMLElement).getAttribute("data-url");
				if (url) {
					window.open(url, "_blank");
				}
			});
			link.addEventListener("keydown", (e) => {
				const key = (e as KeyboardEvent).key;
				if (key === "Enter" || key === " ") {
					e.preventDefault();
					(link as HTMLElement).click();
				}
			});
		});

		// Handle GitHub link clicks
		document.querySelectorAll("[data-github-link]").forEach((link) => {
			link.addEventListener("click", (e) => {
				e.preventDefault();
				e.stopPropagation();
				const url = (link as HTMLElement).getAttribute("data-url");
				if (url) {
					window.open(url, "_blank");
				}
			});
			link.addEventListener("keydown", (e) => {
				const key = (e as KeyboardEvent).key;
				if (key === "Enter" || key === " ") {
					e.preventDefault();
					(link as HTMLElement).click();
				}
			});
		});

		// Welcome banner minimal hide/restore (persisted)
		const WELCOME_KEY = "welcome_hidden";
		const welcomeBanner = document.getElementById("welcome-banner");
		const welcomeDismiss = document.getElementById("welcome-dismiss");
		const welcomeRestore = document.getElementById("welcome-restore");
		const welcomeRestoreBtn = document.getElementById("welcome-restore-btn");

		const applyWelcomeState = (hidden: boolean) => {
			if (!welcomeBanner || !welcomeRestore) return;
			welcomeBanner.classList.toggle("hidden", hidden);
			welcomeRestore.classList.toggle("hidden", !hidden);
		};

		const storedHidden = localStorage.getItem(WELCOME_KEY) === "1";
		applyWelcomeState(storedHidden);

		welcomeDismiss?.addEventListener("click", () => {
			localStorage.setItem(WELCOME_KEY, "1");
			applyWelcomeState(true);
		});

		welcomeRestoreBtn?.addEventListener("click", () => {
			localStorage.removeItem(WELCOME_KEY);
			applyWelcomeState(false);
		});

		// Default to projects tab on load
		activateTab("projects");

		// Scroll-to-top button visibility
		const scrollBtn = document.getElementById("scroll-top-btn");
		if (scrollBtn) {
			const onScroll = () => {
				const show = window.scrollY > 400;
				scrollBtn.classList.toggle("opacity-100", show);
				scrollBtn.classList.toggle("pointer-events-auto", show);
				scrollBtn.classList.toggle("opacity-0", !show);
				scrollBtn.classList.toggle("pointer-events-none", !show);
			};
			window.addEventListener("scroll", onScroll, { passive: true });
			onScroll();
			scrollBtn.addEventListener("click", () => {
				window.scrollTo({ top: 0, behavior: "smooth" });
			});
		}
	});
</script>
