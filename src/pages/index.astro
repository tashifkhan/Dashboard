---
import Layout from "../layouts/Layout.astro";
import ProjectFilters from "../components/ProjectFilters";
import BlogFilters from "../components/BlogFilters";
import LeetCodeStats from "../components/LeetCodeStats.astro";
import GitHubStats from "../components/GitHubStats.astro";
import LeetCodeContests from "../components/LeetCodeContests.astro";
import LeetCodeBadges from "../components/LeetCodeBadges.astro";
import Resume from "../components/Resume.astro";
import {
	Github,
	Twitter,
	Linkedin,
	Mail,
	Code2,
	BookOpen,
	Users,
	ExternalLink,
	Globe,
	FileText,
} from "lucide-react";
import { allProjects, type Project } from "../data/projects";
import { allBlogPosts, type BlogPost } from "../data/blog";
import { leetCodeData } from "../data/leetcode";
import { githubStats } from "../data/github";

const projects: Project[] = allProjects;
const blogPosts: BlogPost[] = allBlogPosts;
const { profile } = leetCodeData;
const { stats, stars } = githubStats;

const numProjects = projects.length;
const numBlogPosts = blogPosts.length;
const totalCommits = stats?.totalCommits ?? 0;
const totalSolved = leetCodeData?.stats?.totalSolved ?? 0;

const blogCategories = [...new Set(blogPosts.map((post) => post.category))];

const socials = [
	{ icon: Github, link: "https://github.com/tashifkhan", label: "GitHub" },
	{ icon: Globe, link: "https://portfolio.tashif.codes", label: "Portfolio" },
	{
		icon: Linkedin,
		link: "https://www.linkedin.com/in/tashif-ahmad-khan-982304244/",
		label: "LinkedIn",
	},
	{ icon: Twitter, link: "https://twitter.com/khan_tashif_", label: "Twitter" },
	{ icon: Mail, link: "mailto:tashif@duck.com", label: "Email" },
];
---

<Layout title="Tashif Ahmad Khan - Personal Dashboard">
	<div
		class="relative min-h-screen bg-gradient-to-b from-gray-50 to-white dark:from-gray-950 dark:to-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300 font-sans scroll-smooth"
	>
		<div
			class="pointer-events-none absolute inset-0 [mask-image:radial-gradient(80%_60%_at_50%_0%,black,transparent)]"
		>
			<div
				class="h-40 bg-gradient-to-b from-orange-200/40 to-transparent dark:from-orange-900/20"
			>
			</div>
		</div>
		<!-- Header -->
		<header
			class="sticky top-0 z-40 backdrop-blur supports-[backdrop-filter]:bg-white/70 dark:supports-[backdrop-filter]:bg-gray-900/60 bg-white/80 dark:bg-gray-900/70 border-b border-gray-200/60 dark:border-gray-800/60 shadow-sm"
		>
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3 sm:py-4">
				<div
					class="flex flex-col sm:flex-row justify-between items-center gap-4"
				>
					<div class="flex items-center space-x-4">
						<img
							src="https://avatars.githubusercontent.com/u/75897907?v=4"
							alt="Tashif Ahmad Khan"
							class="w-14 h-14 sm:w-16 sm:h-16 rounded-full ring-2 ring-orange-400/70 dark:ring-orange-500/60 ring-offset-2 ring-offset-white dark:ring-offset-gray-900 shadow-md"
						/>
						<div>
							<h1
								class="text-2xl sm:text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
							>
								Tashif Ahmad Khan
							</h1>
							<p class="text-gray-600 dark:text-gray-300 text-sm">
								{profile.realName || "Software Developer"}
							</p>
						</div>
					</div>
					<div class="flex items-center space-x-1.5 sm:space-x-2">
						<!-- <ThemeToggle client:load /> -->
						{
							socials.map((social) => (
								<a
									href={social.link}
									target="_blank"
									rel="noopener noreferrer"
									class="inline-flex p-2 rounded-full text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800/70 transition-colors"
									aria-label={social.label}
								>
									<social.icon size={20} />
								</a>
							))
						}
					</div>
				</div>
			</div>
		</header>

		<!-- Navigation -->
		<nav
			class="sticky top-[56px] sm:top-[64px] z-30 backdrop-blur supports-[backdrop-filter]:bg-white/70 dark:supports-[backdrop-filter]:bg-gray-900/60 bg-white/80 dark:bg-gray-900/70 border-b border-gray-200/60 dark:border-gray-800/60 transition-colors duration-300 overflow-x-auto font-sans"
		>
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="flex space-x-1 sm:space-x-2 min-w-max py-2">
					<button
						id="projects-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-orange-500 text-orange-600 dark:text-orange-400 whitespace-nowrap bg-orange-50/60 dark:bg-orange-950/20"
					>
						<Code2 size={20} />
						<span>Projects</span>
					</button>
					<button
						id="blog-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:border-gray-300 dark:hover:border-gray-600 transition-colors whitespace-nowrap hover:bg-gray-50 dark:hover:bg-gray-800/60"
					>
						<BookOpen size={20} />
						<span>Blog</span>
					</button>
					<button
						id="leetcode-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:border-gray-300 dark:hover:border-gray-600 transition-colors whitespace-nowrap hover:bg-gray-50 dark:hover:bg-gray-800/60"
					>
						<Code2 size={20} />
						<span>LeetCode</span>
					</button>
					<button
						id="github-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:border-gray-300 dark:hover:border-gray-600 transition-colors whitespace-nowrap hover:bg-gray-50 dark:hover:bg-gray-800/60"
					>
						<Github size={20} />
						<span>GitHub</span>
					</button>
					<button
						id="resume-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:border-gray-300 dark:hover:border-gray-600 transition-colors whitespace-nowrap hover:bg-gray-50 dark:hover:bg-gray-800/60"
					>
						<FileText size={20} />
						<span>Resume</span>
					</button>
					<button
						id="community-tab"
						class="py-2.5 sm:py-3 px-3 sm:px-4 inline-flex items-center space-x-2 rounded-lg border-b-2 border-transparent text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:border-gray-300 dark:hover:border-gray-600 transition-colors whitespace-nowrap hover:bg-gray-50 dark:hover:bg-gray-800/60"
					>
						<Users size={20} />
						<span>Community</span>
					</button>
				</div>
			</div>
		</nav>

		<!-- Main Content -->
		<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8">
			<!-- Hero / Summary -->
			<section class="mb-10">
				<div
					class="relative overflow-hidden rounded-2xl border border-gray-200/60 dark:border-gray-800/60 bg-gradient-to-br from-white/80 to-gray-50/60 dark:from-gray-900/70 dark:to-gray-950/50 backdrop-blur p-6 sm:p-8"
				>
					<div
						class="absolute -top-20 -right-16 h-48 w-48 sm:h-64 sm:w-64 rounded-full bg-orange-200/40 dark:bg-orange-900/20 blur-3xl"
					>
					</div>
					<div class="relative z-10 flex items-center justify-between mb-4">
						<h2 class="text-xl sm:text-2xl font-semibold tracking-tight">
							Welcome
						</h2>
						<button
							id="hero-toggle"
							aria-expanded="true"
							class="inline-flex items-center px-2.5 py-1.5 rounded-md text-xs font-medium border bg-white/70 dark:bg-gray-900/60 hover:bg-white dark:hover:bg-gray-800/70 text-gray-700 dark:text-gray-200 border-gray-200/60 dark:border-gray-700/60 shadow-sm"
							>Hide</button
						>
					</div>
					<div class="relative z-10" data-hero-content>
						<p class="text-gray-600 dark:text-gray-300 mb-4">
							A snapshot of your activity across projects, GitHub, and LeetCode.
						</p>
						<div class="grid grid-cols-2 sm:grid-cols-4 gap-3">
							<div
								class="rounded-xl border border-gray-200/60 dark:border-gray-800/60 bg-white/60 dark:bg-gray-900/60 p-4"
							>
								<div
									class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
								>
									Projects
								</div>
								<div class="mt-1 text-2xl font-bold">{numProjects}</div>
							</div>
							<div
								class="rounded-xl border border-gray-200/60 dark:border-gray-800/60 bg-white/60 dark:bg-gray-900/60 p-4"
							>
								<div
									class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
								>
									Blog Posts
								</div>
								<div class="mt-1 text-2xl font-bold">{numBlogPosts}</div>
							</div>
							<div
								class="rounded-xl border border-gray-200/60 dark:border-gray-800/60 bg-white/60 dark:bg-gray-900/60 p-4"
							>
								<div
									class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
								>
									Commits
								</div>
								<div class="mt-1 text-2xl font-bold">{totalCommits}</div>
							</div>
							<div
								class="rounded-xl border border-gray-200/60 dark:border-gray-800/60 bg-white/60 dark:bg-gray-900/60 p-4"
							>
								<div
									class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400"
								>
									LC Solved
								</div>
								<div class="mt-1 text-2xl font-bold">{totalSolved}</div>
							</div>
						</div>
					</div>
				</div>
			</section>

			<!-- Projects Section -->
			<div id="projects-section">
				<div class="mb-8">
					<h2
						class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
					>
						Projects
					</h2>
					<p class="text-gray-600 dark:text-gray-300">
						Explore my latest projects and contributions
					</p>
				</div>

				<ProjectFilters client:load />
				<div class="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6">
					{
						projects.map(
							(project: {
								title: string;
								description: string;
								languages: string[];
								live_website_url?: string;
								github_link: string;
								readme: string;
								slug: string;
							}) => (
								<a
									href={`/projects/${project.slug}`}
									class="block bg-white/70 dark:bg-gray-900/50 backdrop-blur p-4 sm:p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 no-underline group"
									data-project-item-card
									data-has-live-link={!!project.live_website_url}
								>
									<h3
										class="text-lg sm:text-xl font-semibold text-gray-900 dark:text-white font-mono group-hover:text-orange-600 dark:group-hover:text-orange-400"
										data-project-title
									>
										{project.title}
									</h3>
									<p
										class="mt-2 text-gray-600 dark:text-gray-300 text-sm"
										data-project-description
									>
										{project.description}
									</p>
									<div class="mt-4 flex flex-wrap gap-2">
										{project.languages.map((lang) => (
											<span
												class="px-2 sm:px-3 py-1 bg-orange-50 text-orange-700 dark:bg-orange-950/30 dark:text-orange-300 border border-orange-200/60 dark:border-orange-800/60 rounded-full text-xs sm:text-sm font-mono transition-colors duration-300"
												data-project-language
											>
												{lang}
											</span>
										))}
									</div>
									<div class="mt-4 flex items-center justify-start space-x-4">
										{project.live_website_url && (
											<span
												class="inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300 text-sm cursor-pointer"
												data-live-link
												data-url={project.live_website_url}
											>
												Live Site <ExternalLink size={16} className="ml-1" />
											</span>
										)}
										<span
											class="inline-flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300 text-sm cursor-pointer"
											data-github-link
											data-url={project.github_link}
										>
											GitHub <Github size={16} className="ml-1" />
										</span>
									</div>
								</a>
							)
						)
					}
				</div>
			</div>

			<!-- Blog Section -->
			<div id="blog-section" class="hidden">
				<div class="mb-8">
					<h2
						class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
					>
						Blog
					</h2>
					<p class="text-gray-600 dark:text-gray-300">
						Thoughts on technology and development
					</p>
				</div>

				<BlogFilters
					client:load
					categories={blogCategories}
					onSearch={(term) => {
						console.log("Blog search term:", term);
						const searchEvent = new CustomEvent("blog-search", {
							detail: { term },
						});
						document.dispatchEvent(searchEvent);
					}}
					onCategoryChange={(category) => {
						console.log("Blog category changed:", category);
						const categoryEvent = new CustomEvent("blog-category", {
							detail: { category },
						});
						document.dispatchEvent(categoryEvent);
					}}
				/>
				{
					blogPosts.map((post) => (
						<div
							class="bg-white/70 dark:bg-gray-900/50 backdrop-blur p-4 sm:p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg"
							data-blog-card
							data-blog-category={post.category}
						>
							<div class="flex flex-col sm:flex-row sm:justify-between sm:items-start gap-2 sm:gap-0">
								<div>
									<span
										class="px-3 py-1 bg-orange-50 text-orange-700 dark:bg-orange-950/30 dark:text-orange-300 border border-orange-200/60 dark:border-orange-800/60 rounded-full text-sm font-mono transition-colors duration-300"
										data-blog-category
									>
										{post.category}
									</span>
									<h3
										class="mt-2 text-xl font-semibold text-gray-900 dark:text-white"
										data-blog-title
									>
										{post.title}
									</h3>
								</div>
								<span class="text-gray-500 dark:text-gray-400 text-sm">
									{post.date}
								</span>
							</div>
							<a
								href={`/blog/${post.slug}`}
								class="mt-4 inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300"
							>
								Read More <ExternalLink size={16} className="ml-1" />
							</a>
						</div>
					))
				}
			</div>

			<!-- LeetCode Section -->
			<div id="leetcode-section" class="hidden">
				<div class="mb-8">
					<h2
						class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
					>
						LeetCode Profile
					</h2>
					<p class="text-gray-600 dark:text-gray-300">
						Your coding challenge journey
					</p>
				</div>

				<LeetCodeStats />

				<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
					<LeetCodeContests />
					<LeetCodeBadges />
				</div>
			</div>

			<!-- GitHub Section -->
			<div id="github-section" class="hidden">
				<div class="mb-8">
					<h2
						class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
					>
						GitHub Profile
					</h2>
					<p class="text-gray-600 dark:text-gray-300">
						Your open source contributions
					</p>
				</div>

				<GitHubStats />
			</div>

			<!-- Resume Section -->
			<div id="resume-section" class="hidden">
				<Resume />
			</div>

			<!-- Community Section -->
			<div id="community-section" class="hidden">
				<div class="mb-8">
					<h2
						class="text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-2"
					>
						Community
					</h2>
					<p class="text-gray-600 dark:text-gray-300">
						Connect with the developer community
					</p>
				</div>

				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
					<div
						class="bg-white/70 dark:bg-gray-900/50 backdrop-blur p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg"
					>
						<div class="flex items-center space-x-3 mb-4">
							<Github className="w-6 h-6 text-gray-600 dark:text-gray-400" />
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
								GitHub
							</h3>
						</div>
						<p class="text-gray-600 dark:text-gray-300 mb-4">
							Follow my open source projects and contributions
						</p>
						<a
							href="https://github.com/tashifkhan"
							target="_blank"
							rel="noopener noreferrer"
							class="inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300"
						>
							Visit Profile <ExternalLink size={16} className="ml-1" />
						</a>
					</div>

					<div
						class="bg-white/70 dark:bg-gray-900/50 backdrop-blur p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg"
					>
						<div class="flex items-center space-x-3 mb-4">
							<Twitter className="w-6 h-6 text-gray-600 dark:text-gray-400" />
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
								Twitter
							</h3>
						</div>
						<p class="text-gray-600 dark:text-gray-300 mb-4">
							Follow for tech updates and coding insights
						</p>
						<a
							href="https://twitter.com/khan_tashif_"
							target="_blank"
							rel="noopener noreferrer"
							class="inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300"
						>
							Follow <ExternalLink size={16} className="ml-1" />
						</a>
					</div>

					<div
						class="bg-white/70 dark:bg-gray-900/50 backdrop-blur p-6 rounded-xl border border-gray-200/60 dark:border-gray-700/60 transition-all duration-300 hover:shadow-lg"
					>
						<div class="flex items-center space-x-3 mb-4">
							<Linkedin className="w-6 h-6 text-gray-600 dark:text-gray-400" />
							<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
								LinkedIn
							</h3>
						</div>
						<p class="text-gray-600 dark:text-gray-300 mb-4">
							Connect professionally and view my experience
						</p>
						<a
							href="https://www.linkedin.com/in/tashif-ahmad-khan-982304244/"
							target="_blank"
							rel="noopener noreferrer"
							class="inline-flex items-center text-orange-600 dark:text-orange-400 hover:text-orange-800 dark:hover:text-orange-300"
						>
							Connect <ExternalLink size={16} className="ml-1" />
						</a>
					</div>
				</div>
			</div>
		</main>
	</div>
</Layout>

<script>
	// Tab switching logic
	const tabs = {
		projects: document.getElementById("projects-tab"),
		blog: document.getElementById("blog-tab"),
		leetcode: document.getElementById("leetcode-tab"),
		github: document.getElementById("github-tab"),
		resume: document.getElementById("resume-tab"),
		community: document.getElementById("community-tab"),
	};

	const sections = {
		projects: document.getElementById("projects-section"),
		blog: document.getElementById("blog-section"),
		leetcode: document.getElementById("leetcode-section"),
		github: document.getElementById("github-section"),
		resume: document.getElementById("resume-section"),
		community: document.getElementById("community-section"),
	};

	function activateTab(
		tabId: "projects" | "blog" | "leetcode" | "github" | "resume" | "community"
	) {
		Object.values(tabs).forEach((tab) => {
			if (!tab) return;
			tab.classList.remove(
				"border-orange-500",
				"text-orange-600",
				"dark:text-orange-400"
			);
			tab.classList.add(
				"border-transparent",
				"text-gray-600",
				"dark:text-gray-300"
			);
		});

		const activeTab = tabs[tabId];
		if (activeTab) {
			activeTab.classList.remove(
				"border-transparent",
				"text-gray-600",
				"dark:text-gray-300"
			);
			activeTab.classList.add(
				"border-orange-500",
				"text-orange-600",
				"dark:text-orange-400"
			);
		}

		Object.values(sections).forEach((section) => {
			if (!section) return;
			section.classList.add("hidden");
		});

		const activeSection = sections[tabId];
		if (activeSection) {
			activeSection.classList.remove("hidden");
		}
	}

	tabs.projects?.addEventListener("click", () => activateTab("projects"));
	tabs.blog?.addEventListener("click", () => activateTab("blog"));
	tabs.leetcode?.addEventListener("click", () => activateTab("leetcode"));
	tabs.github?.addEventListener("click", () => activateTab("github"));
	tabs.resume?.addEventListener("click", () => activateTab("resume"));
	tabs.community?.addEventListener("click", () => activateTab("community"));

	// Enhanced search functions
	function fuzzySearch(text: string, query: string): boolean {
		if (!query.trim()) return true;

		const textLower = text.toLowerCase();
		const queryLower = query.toLowerCase();

		// Exact match check
		if (textLower.includes(queryLower)) return true;

		// Fuzzy match using character sequence
		let queryIndex = 0;
		for (
			let i = 0;
			i < textLower.length && queryIndex < queryLower.length;
			i++
		) {
			if (textLower[i] === queryLower[queryIndex]) {
				queryIndex++;
			}
		}

		// If we found all characters in sequence, it's a fuzzy match
		return queryIndex === queryLower.length;
	}

	function enhancedSearch(text: string, query: string): boolean {
		if (!query.trim()) return true;

		const textLower = text.toLowerCase();
		const queryLower = query.toLowerCase();

		console.log(`Enhanced search: "${text}" vs "${query}"`);

		// 1. Exact substring match (highest priority)
		if (textLower.includes(queryLower)) {
			console.log("  -> Exact match found");
			return true;
		}

		// 2. Word boundary match (matches whole words)
		const words = textLower.split(/\s+/);
		const queryWords = queryLower.split(/\s+/);

		// Check if all query words are found in text words
		const allWordsFound = queryWords.every((queryWord) =>
			words.some((word) => word.includes(queryWord))
		);
		if (allWordsFound) {
			console.log("  -> Word boundary match found");
			return true;
		}

		// 3. Fuzzy match (for typos and partial matches)
		const fuzzyResult = fuzzySearch(textLower, queryLower);
		console.log("  -> Fuzzy match result:", fuzzyResult);
		return fuzzyResult;
	}

	// Project search and filter functionality
	document.addEventListener("project-search", (e: Event) => {
		const { term: searchTerm, showLiveOnly } = (e as CustomEvent).detail;
		console.log(
			"Project search triggered with term:",
			searchTerm,
			"showLiveOnly:",
			showLiveOnly
		);

		const projectCards = document.querySelectorAll("[data-project-item-card]");
		console.log("Found project cards:", projectCards.length);

		let visibleCount = 0;
		let liveProjectCount = 0;

		projectCards.forEach((cardEl, index) => {
			const card = cardEl as HTMLElement;
			const title =
				card.querySelector("[data-project-title]")?.textContent || "";
			const description =
				card.querySelector("[data-project-description]")?.textContent || "";
			const languages = Array.from(
				card.querySelectorAll("[data-project-language]")
			).map((lang) => lang.textContent || "");

			// Check if this project has a live link
			const hasLiveLink =
				card.querySelector("[data-live-link]") !== null ||
				card.getAttribute("data-has-live-link") === "true";
			if (hasLiveLink) liveProjectCount++;

			console.log(`Card ${index}:`, {
				title,
				description,
				languages,
				hasLiveLink,
				hasLiveLinkElement: card.querySelector("[data-live-link]") !== null,
				dataHasLiveLink: card.getAttribute("data-has-live-link"),
			});

			// Use enhanced search for better matching
			const titleMatch = enhancedSearch(title, searchTerm);
			const descriptionMatch = enhancedSearch(description, searchTerm);
			const languageMatch = languages.some((lang) =>
				enhancedSearch(lang, searchTerm)
			);

			const searchMatches = titleMatch || descriptionMatch || languageMatch;
			const liveFilter = !showLiveOnly || hasLiveLink;
			const matches = searchMatches && liveFilter;

			console.log(`Card ${index} matches:`, {
				searchMatches,
				liveFilter,
				matches,
			});

			if (matches) visibleCount++;
			card.style.display = matches ? "" : "none";
		});

		console.log(
			`Filter results: ${visibleCount} visible cards, ${liveProjectCount} total live projects`
		);
	});

	// Blog search and filter functionality
	document.addEventListener("blog-search", (e: Event) => {
		const searchTerm = (e as CustomEvent).detail.term;
		const blogCards = document.querySelectorAll("[data-blog-card]");

		blogCards.forEach((card) => {
			const title = card.querySelector("[data-blog-title]")?.textContent || "";
			const category =
				card.querySelector("[data-blog-category]")?.textContent || "";

			// Use enhanced search for better matching
			const titleMatch = enhancedSearch(title, searchTerm);
			const categoryMatch = enhancedSearch(category, searchTerm);

			const matches = titleMatch || categoryMatch;
			card.classList.toggle("hidden", !matches);
		});
	});

	document.addEventListener("blog-category", (e: Event) => {
		const category = (e as CustomEvent).detail.category;
		const blogCards = document.querySelectorAll("[data-blog-card]");

		blogCards.forEach((card) => {
			const blogCategory = card.getAttribute("data-blog-category");
			card.classList.toggle(
				"hidden",
				category !== "all" && blogCategory !== category
			);
		});
	});

	// Initialize filters and handle link clicks
	document.addEventListener("DOMContentLoaded", () => {
		const theme = localStorage.getItem("theme") || "light";
		document.documentElement.classList.toggle("dark", theme === "dark");

		// Initialize project filters with default state
		const projectCards = document.querySelectorAll("[data-project-item-card]");
		console.log(
			"Initializing project filters with",
			projectCards.length,
			"cards"
		);

		// Count live projects for debugging
		let liveProjectCount = 0;
		projectCards.forEach((card) => {
			const hasLiveLink =
				card.querySelector("[data-live-link]") !== null ||
				card.getAttribute("data-has-live-link") === "true";
			if (hasLiveLink) liveProjectCount++;
		});
		console.log("Total live projects found:", liveProjectCount);

		// Apply initial filter state (show all projects by default)
		const initialSearchEvent = new CustomEvent("project-search", {
			detail: { term: "", showLiveOnly: false },
		});
		document.dispatchEvent(initialSearchEvent);

		// Handle live link clicks
		document.querySelectorAll("[data-live-link]").forEach((link) => {
			link.addEventListener("click", (e) => {
				e.preventDefault();
				e.stopPropagation();
				const url = link.getAttribute("data-url");
				if (url) {
					window.open(url, "_blank");
				}
			});
		});

		// Handle GitHub link clicks
		document.querySelectorAll("[data-github-link]").forEach((link) => {
			link.addEventListener("click", (e) => {
				e.preventDefault();
				e.stopPropagation();
				const url = link.getAttribute("data-url");
				if (url) {
					window.open(url, "_blank");
				}
			});
		});

		// Welcome banner toggle
		const heroToggle = document.getElementById("hero-toggle");
		const heroContent = document.querySelector(
			"[data-hero-content]"
		) as HTMLElement | null;
		if (heroToggle && heroContent) {
			heroToggle.addEventListener("click", () => {
				const expanded = heroToggle.getAttribute("aria-expanded") === "true";
				heroToggle.setAttribute("aria-expanded", (!expanded).toString());
				heroToggle.textContent = expanded ? "Show" : "Hide";
				heroContent.style.display = expanded ? "none" : "";
			});
		}

		// Default to projects tab on load
		activateTab("projects");
	});
</script>
