---
// Fetch blog posts from external API to generate static paths
type RemotePost = {
	title: string;
	date: string;
	author: string;
	socials: string[];
	tags: string[];
	excerpt: string;
	slug: string;
};

export async function getStaticPaths() {
	try {
		const res = await fetch("https://blog.tashif.codes/api/posts.json");
		if (res.ok) {
			const posts = (await res.json()) as RemotePost[];
			return posts.map((post) => ({
				params: { slug: post.slug },
				props: { post },
			}));
		}
	} catch (err) {
		console.error("Error fetching remote blog posts for static paths:", err);
	}

	// Return empty array if fetch fails
	return [];
}

const { post } = Astro.props as { post: RemotePost };

// Redirect to external blog
return Astro.redirect(`https://blog.tashif.codes/blog/${post.slug}`, 301);
---
