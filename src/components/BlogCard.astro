---
import {
	Calendar,
	Clock,
	ExternalLink,
	Star,
	TrendingUp,
	ArrowRight,
} from "lucide-react";

type RemotePost = {
	title: string;
	date: string; // ISO date
	author: string;
	socials: string[];
	tags: string[];
	excerpt: string;
	slug: string;
};

type Props = {
	post: RemotePost;
	variant?: "default" | "featured" | "compact" | "spotlight";
	index?: number;
};

const { post, variant = "default", index = 0 } = Astro.props as Props;

const url = `https://blog.tashif.codes/blog/${post.slug}`;
const dateObj = new Date(post.date);
const dateText = dateObj.toLocaleDateString("en-US", {
	month: "short",
	day: "numeric",
	year: "numeric",
});

// Simplified color palette with fewer, more subtle options
const gradientSets = [
	{
		bg: "from-gray-600 to-gray-800",
		accent: "from-gray-400 to-gray-600",
		text: "text-gray-100",
	},
	{
		bg: "from-orange-500 to-orange-700",
		accent: "from-orange-300 to-orange-500",
		text: "text-orange-100",
	},
	{
		bg: "from-blue-600 to-blue-800",
		accent: "from-blue-400 to-blue-600",
		text: "text-blue-100",
	},
];

const hash = Array.from(post.slug).reduce(
	(acc, ch) => acc + ch.charCodeAt(0),
	0
);
const gradientSet = gradientSets[hash % gradientSets.length];

// Estimated read time (rough approximation)
const readTime = Math.max(1, Math.round((post.excerpt?.length || 200) / 200));
---

{
	variant === "featured" ? (
		<article class="group relative neo-card rounded-none border-2 p-0 animate-in overflow-hidden">
			<a href={url} target="_blank" rel="noopener noreferrer" class="block">
				<div class={`relative h-48 overflow-hidden bg-primary/20`}>
					<div class="absolute inset-0 grid grid-cols-12 opacity-10">
						{[...Array(60)].map((_, i) => (
							<div class="border border-border" />
						))}
					</div>
					<div class="absolute inset-0 bg-gradient-to-t from-background via-transparent to-transparent" />
					<div class="absolute bottom-4 left-4 right-4">
						<div class="flex flex-wrap gap-2 mb-3" data-blog-tags-container>
							{post.tags?.slice(0, 3).map((tag) => (
								<span
									class="border-2 border-border bg-card px-2 py-1 text-[11px] font-semibold tracking-tight"
									data-blog-tag
								>
									{tag}
								</span>
							))}
						</div>
						<h2
							class="text-2xl font-bold leading-tight text-foreground group-hover:text-primary transition-colors"
							data-blog-title
						>
							{post.title}
						</h2>
						<div class="mt-2 flex items-center gap-4 text-xs text-muted-foreground">
							<span class="inline-flex items-center gap-1">
								<Calendar className="w-4 h-4" />
								{dateText}
							</span>
							<span class="inline-flex items-center gap-1">
								<Clock className="w-4 h-4" />
								{readTime}m
							</span>
						</div>
					</div>
				</div>
				<div class="p-5 flex flex-col gap-4">
					{post.excerpt && (
						<p class="text-sm text-muted-foreground line-clamp-2">
							{post.excerpt}
						</p>
					)}
					<div class="flex items-center justify-between">
						<span class="text-xs font-mono text-muted-foreground">
							{post.author || "Tashif Ahmad Khan"}
						</span>
						<span class="neo-btn !px-3 !py-1.5 text-xs gap-1">
							<ArrowRight className="w-4 h-4" />
							Read
						</span>
					</div>
				</div>
			</a>
		</article>
	) : (
		<article class="group relative neo-card rounded-none border-2 p-0 animate-in overflow-hidden">
			<a href={url} target="_blank" rel="noopener noreferrer" class="block">
				<div class="relative h-20 bg-muted/40 border-b-2 border-border flex items-end px-4 pb-2">
					<div class="flex items-center justify-between w-full text-[11px] text-muted-foreground">
						<span class="inline-flex items-center gap-1">
							<Calendar className="w-3 h-3" />
							{dateText}
						</span>
						<span class="inline-flex items-center gap-1">
							<Clock className="w-3 h-3" />
							{readTime}m
						</span>
					</div>
				</div>
				<div class="p-4 flex flex-col gap-2">
					<div class="flex flex-wrap gap-1.5" data-blog-tags-container>
						{post.tags?.slice(0, 3).map((tag) => (
							<span
								class="px-2 py-0.5 text-[11px] font-medium border-2 border-border bg-card hover:bg-accent hover:text-accent-foreground transition-colors"
								data-blog-tag
							>
								{tag}
							</span>
						))}
					</div>
					<h3
						class="text-base font-semibold line-clamp-2 tracking-tight text-foreground group-hover:text-primary transition-colors"
						data-blog-title
					>
						{post.title}
					</h3>
					{post.excerpt && (
						<p class="text-xs leading-snug text-muted-foreground line-clamp-3">
							{post.excerpt}
						</p>
					)}
					<div class="mt-1 flex items-center justify-between">
						<span class="text-[11px] font-mono text-muted-foreground">
							{post.author || "Tashif Ahmad Khan"}
						</span>
						<span class="opacity-0 group-hover:opacity-100 transition-opacity text-primary inline-flex items-center gap-1 text-[11px] font-semibold">
							<ExternalLink className="w-3 h-3" />
							Read
						</span>
					</div>
				</div>
			</a>
		</article>
	)
}

<style>
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.animate-in {
		animation: fadeInUp 0.6s ease-out forwards;
		opacity: 0;
	}

	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}

	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style>
