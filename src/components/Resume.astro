---
import {
	FileText,
	Mail,
	Linkedin,
	Github,
	Globe,
	Calendar,
	MapPin,
	Award,
	Users,
	BookOpen,
	Download,
	MapPin as LocationIcon,
} from "lucide-react";

// Design system helpers (light abstraction to keep template clean)
const cardBase =
	"group relative rounded-2xl border border-gray-200/60 dark:border-gray-800/60 bg-white/80 dark:bg-gray-900/70 backdrop-blur-xl shadow-sm transition-all duration-400 hover:shadow-md hover:-translate-y-0.5";
// Thin luminous vertical accent line inside card + optional gradient end color
const leftBar = (from: string, to?: string) =>
	`pointer-events-none absolute left-0 top-2 bottom-2 w-[3px] rounded-full bg-gradient-to-b from-${from} ${to ? `to-${to}` : `to-${from}`} opacity-95`;
// Soft glow plume behind the line for depth
const glowBar = (color: string) =>
	`pointer-events-none absolute left-0 top-4 bottom-4 w-10 -translate-x-1 bg-gradient-to-b from-${color}-500/25 via-${color}-500/0 to-${color}-500/25 blur-xl`;

interface ExperienceItem {
	company: string;
	role: string;
	period: string;
	certificate?: string;
	points: string[];
	color: string; // tailwind color name (e.g. blue, green)
}

interface ProjectItem {
	title: string;
	stack: string;
	links: { label: string; url: string }[];
	points: string[];
	color: string;
}

interface EducationItem {
	institute: string;
	period: string;
	degree?: string;
	details?: string[];
	color: string;
}

interface PositionItem {
	title: string;
	org: string;
	period: string;
	points: string[];
	color: string;
}

const experiences: ExperienceItem[] = [
	{
		company: "UNICLOUD",
		role: "Software Development Intern",
		period: "June - July 2026",
		certificate: "https://drive.tashif.codes/s/RsaiDWGCEoXjt2K",
		color: "blue",
		points: [
			'Engineered and deployed 3 critical React modules for a <a href="https://irgvap.ircep.gov.in" target="_blank" class="text-blue-600 dark:text-blue-400 hover:underline">high-profile IRCTC project</a>, enhancing vendor progress monitoring & data visualization.',
			"Developed robust NestJS REST APIs with JWT authentication and optimized PostgreSQL CRUD operations.",
			"Automated Database Migration cron jobs dispatching real-time Block Change Alerts via SMTP and web push notifications.",
		],
	},
];

const projects: ProjectItem[] = [
	{
		title: "FindexAI — AI-Powered Browser Discovery Engine",
		stack:
			"Next.js, React, FastAPI, LangChain, LangGraph, FAISS, ChromaDB, Docker, WebExtension APIs",
		color: "green",
		links: [
			{ label: "Live", url: "https://findex.tashif.codes" },
			{ label: "GitHub", url: "https://github.com/tashifkhan/findex" },
		],
		points: [
			"Pioneered FindexAI, an <strong>AI-powered browser extension</strong> transforming search into a contextual discovery engine for web + YouTube.",
			"Built <strong>multi-agent architecture</strong> with LangChain & LangGraph for web search, transcript analysis & HTML querying.",
			"Implemented <strong>vector similarity search</strong> with FAISS & ChromaDB enabling fast semantic retrieval.",
			"Engineered a <strong>model-agnostic FastAPI backend</strong> + responsive cross-browser extension (Chrome & Firefox).",
			"Integrated a <strong>customizable theme engine</strong> (MacOS Classic, Windows XP, Neobrutal etc.).",
		],
	},
	{
		title: "TalentSync AI",
		stack:
			"Next.js, TypeScript, FastAPI, LangChain, LangGraph, PostgreSQL, Docker",
		color: "blue",
		links: [
			{ label: "Live", url: "https://talentsync.tashif.codes/" },
			{
				label: "GitHub",
				url: "https://github.com/harleenkaur28/AI-Resume-Parser",
			},
		],
		points: [
			"AI-driven platform for resume analysis, job category prediction & talent management dashboard.",
			"Advanced <strong>LangChain RAG + LangGraph</strong> flows for cold email drafting, interview question generation & answer frameworks.",
			"Intelligent parsing for structured candidate profiling & accurate categorization.",
			"Scalable FastAPI + PostgreSQL backend, containerized with Docker.",
		],
	},
	{
		title: "JPortal",
		stack: "React, Python, WASM (Pyodide), MongoDB (4.5k+ users)",
		color: "purple",
		links: [
			{ label: "Live", url: "https://jportal.tashif.codes" },
			{ label: "GitHub", url: "https://github.com/tashifkhan/jportal" },
		],
		points: [
			"Modern React PWA frontend for JIIT WebKiosk adopted by 4,500+ users.",
			"Integrated Pyodide to parse & render marks PDF data client-side.",
			'Added modules: <a href="https://jiit-timetable.tashif.codes/" target="_blank" class="text-purple-600 dark:text-purple-400 hover:underline">Timetable</a>, <a href="https://github.com/tashifkhan/placement-alerts-superset-telegram-notification-bot" target="_blank" class="text-purple-600 dark:text-purple-400 hover:underline">Placement</a>, <a href="https://jiit-updates.tashif.codes/" target="_blank" class="text-purple-600 dark:text-purple-400 hover:underline">Campus Updates</a>.',
			"Theming system + deep customization & responsive design.",
		],
	},
	{
		title: "SolarHelper",
		stack:
			"React, TypeScript, FastAPI, PWA, RAG (LangChain), Vector DB, LightGBM",
		color: "yellow",
		links: [
			{ label: "Live", url: "https://solar-helper.tashif.codes/" },
			{ label: "GitHub", url: "https://github.com/tashifkhan/SolarHelper" },
		],
		points: [
			"React PWA for personalized solar sizing, cost & savings forecasting.",
			"RAG chatbot (LangChain + Gemini) for subsidy & policy guidance.",
			"Monthly solar yield forecasting with LightGBM (weather-informed).",
			"FastAPI backend for scraping, embeddings, LLM orchestration & live tariff feeds.",
		],
	},
	{
		title: "BiasDetector",
		stack: "Next.js, TypeScript, Flask, MongoDB, JWT, XgBoost",
		color: "red",
		links: [
			{ label: "Live", url: "https://bias-detector.tashif.codes/" },
			{
				label: "GitHub",
				url: "https://github.com/tashifkhan/News-Bias-Detector",
			},
		],
		points: [
			"Bias detection for news articles with real-time ingestion & MongoDB persistence.",
			"Automated scraping pipeline across diverse sources.",
			"XgBoost model surfaces bias patterns & insight summaries.",
			"Clean responsive UI for analysis consumption.",
		],
	},
	{
		title: "Designique",
		stack:
			"Next.js, TypeScript, Node.js, MongoDB, JWT, WebSockets, Gemini Gen AI API",
		color: "indigo",
		links: [
			{ label: "Live", url: "https://designique.tashif.codes/" },
			{
				label: "GitHub",
				url: "https://github.com/tashifkhan/Designique-rideHack24",
			},
		],
		points: [
			"Marketplace connecting designers, manufacturers & consumers.",
			"Full e‑commerce stack + MongoDB data layer.",
			"Anonymous real-time designer ↔ manufacturer chats (WebSockets).",
			"Gemini-powered support assistant for user queries.",
		],
	},
	{
		title: "CropMate",
		stack:
			"Next.js, TypeScript, Flask, JWT, Gemini Gen AI API, Random Forest, KNN",
		color: "emerald",
		links: [
			{ label: "Live", url: "https://cropmate.tashif.codes/" },
			{ label: "GitHub", url: "https://github.com/tashifkhan/crop- mate" },
		],
		points: [
			"AI-driven crop recommendation, yield prediction & insurance advisory.",
			"Gemini chatbot for instant agronomic support.",
			"Random Forest + KNN ensemble for accurate yield outputs.",
			"Framer Motion enhanced UX & responsive farmer-friendly UI.",
		],
	},
	{
		title: "Home Lab Automation & Media Server",
		stack: "Docker, Docker Compose, Linux, Bash",
		color: "gray",
		links: [{ label: "GitHub", url: "https://github.com/tashifkhan/home-lab" }],
		points: [
			"Self-hosted lab of 10+ Dockerized services (Nextcloud, Jellyfin, Arr stack).",
			"Secure remote access via Tailscale VPN + Nginx Proxy Manager.",
			"Automated media acquisition (Prowlarr, Sonarr, Radarr, Lidarr, Readarr, Homarr, qBittorrent).",
			"Optimized container networking & infra orchestration.",
		],
	},
];

const education: EducationItem[] = [
	{
		institute: "Jaypee Institute of Information Technology, Noida, India",
		period: "2022 - 2026",
		degree: "B. Tech Electronics & Communication Engineering",
		details: ["CGPA: 7.3/10.0"],
		color: "orange",
	},
	{
		institute: "Delhi Public School, R. K. Puram, New Delhi, India",
		period: "2018 - 2022",
		details: ["CBSE XII – 94.6%", "CBSE X – 94%"],
		color: "orange",
	},
];

const positions: PositionItem[] = [
	{
		title: "Treasurer | Senior Advisor",
		org: "Optica Student Chapter JIIT",
		period: "2024 - Present",
		color: "green",
		points: [
			"Orchestrated flagship HC Verma talk with ~4,000 participants (on + off campus).",
			"Coordinated high-engagement comedy talent open mic (~3,000 participants).",
		],
	},
	{
		title: "Mentor",
		org: "The Jaypee Debating Society",
		period: "2023 - Present",
		color: "blue",
		points: [
			"Guided junior cohort in advanced debate strategy elevating competitive performance.",
		],
	},
	{
		title: "Organizing Secretary | Co-founder",
		org: "Jaypee Parliamentary Debate",
		period: "2023 - 2024",
		color: "purple",
		points: [
			"Launched inaugural inter‑college debate (JPD 1.0) with 52 external teams; established recurring flagship.",
		],
	},
	{
		title: "Core Executive",
		org: "JOUST'23 | Parola Literary Hub JIIT",
		period: "2019 - 2020",
		color: "orange",
		points: [
			"Executed one of India's largest literary festivals (500+ paid participants; ₹700k revenue).",
			"Secured 8 media partnerships (Jagran Josh, DU Beat etc.) driving 50% national participation uplift.",
		],
	},
];

const skillCategories: { label: string; color: string; items: string[] }[] = [
	{
		label: "Programming Languages",
		color: "orange",
		items: ["Python", "JavaScript", "Go"],
	},
	{
		label: "Frameworks & Libraries",
		color: "blue",
		items: [
			"Next.js",
			"React.js",
			"React Native",
			"Node.js",
			"Astro",
			"Express.js",
			"Flask",
			"FastAPI",
			"Redux Toolkit",
			"LangChain",
			"LangGraph",
			"Framer Motion",
		],
	},
	{
		label: "Databases",
		color: "green",
		items: ["MySQL", "MongoDB", "PostgreSQL", "FAISS", "ChromaDB", "SQLite"],
	},
	{
		label: "Tools & Platforms",
		color: "purple",
		items: [
			"Git/GitHub",
			"Docker",
			"Docker Compose",
			"Vercel",
			"Pyodide",
			"Tailscale",
			"Nginx Proxy Manager",
			"WebExtension APIs",
		],
	},
	{
		label: "Systems & Networking",
		color: "red",
		items: ["System Administration", "Network Configuration", "VPN"],
	},
	{
		label: "Additional Skills",
		color: "yellow",
		items: [
			"UI/UX Design",
			"Technical Writing",
			"Data Analysis (Excel)",
			"Presentation Design (PowerPoint)",
		],
	},
];

const navItems = [
	{ id: "skills", label: "Skills", icon: Award },
	{ id: "experience", label: "Experience", icon: Calendar },
	{ id: "projects", label: "Notable Projects", icon: BookOpen },
	{ id: "education", label: "Education", icon: MapPin },
	{ id: "positions", label: "Positions", icon: Users },
];
---

<div class="flex flex-col lg:flex-row gap-6 lg:gap-8">
	<!-- Navigation Sidebar -->
	<aside class="lg:w-64 flex-shrink-0">
		<nav
			id="resume-sidebar"
			class="bg-white/80 dark:bg-gray-900/80 backdrop-blur-xl p-4 rounded-2xl border border-gray-200/60 dark:border-gray-800/60 shadow-lg sticky top-6 z-30 max-h-[calc(100vh-3rem)] overflow-y-auto transition-all"
			aria-label="Resume Section Navigation"
		>
			<h3
				class="text-sm font-semibold uppercase tracking-wider text-gray-600 dark:text-gray-400 mb-3 flex items-center"
			>
				<FileText className="w-4 h-4 mr-2 text-orange-500" /> Overview
			</h3>
			<ul class="space-y-1">
				{
					navItems.map((item) => {
						const Icon = item.icon;
						return (
							<li>
								<a
									href={`#${item.id}`}
									data-section={item.id}
									class="resume-nav-link flex items-center gap-2 px-3 py-2 rounded-lg text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-orange-600 dark:hover:text-orange-400 hover:bg-orange-50/70 dark:hover:bg-orange-900/20 focus:outline-none focus-visible:ring-2 focus-visible:ring-orange-500/50 transition-colors"
								>
									<Icon className="w-4 h-4" /> {item.label}
								</a>
							</li>
						);
					})
				}
			</ul>
		</nav>
	</aside>

	<!-- Main Resume Content -->
	<main class="flex-1">
		<div
			class="bg-white/80 dark:bg-gray-900/80 backdrop-blur-xl p-5 sm:p-7 lg:p-9 rounded-2xl border border-gray-200/60 dark:border-gray-800/60 shadow-lg"
			id="resume-content"
		>
			<!-- Header with Download Button -->
			<header
				class="flex flex-col sm:flex-row justify-between items-start mb-8 gap-5"
			>
				<div class="flex items-center gap-4">
					<div
						class="p-3 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl shadow-sm"
					>
						<FileText className="w-6 h-6 text-white" />
					</div>
					<div>
						<h1
							class="text-2xl sm:text-3xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
						>
							Resume
						</h1>
						<p class="text-gray-600 dark:text-gray-300 text-sm sm:text-base">
							Professional experience & achievements
						</p>
					</div>
				</div>
				<button
					type="button"
					data-download-resume
					class="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white rounded-lg text-sm font-medium shadow-md hover:shadow-lg focus:outline-none focus-visible:ring-2 focus-visible:ring-orange-500/60 active:scale-[0.98] transition"
				>
					<Download className="w-4 h-4" />
					<span>Download PDF</span>
				</button>
			</header>

			<!-- Identity Block -->
			<section
				aria-labelledby="identity-heading"
				class="mb-10 p-5 sm:p-6 rounded-2xl border border-gray-200/60 dark:border-gray-800/60 bg-gradient-to-br from-gray-50/70 to-white/70 dark:from-gray-800/60 dark:to-gray-900/60 backdrop-blur-xl"
			>
				<h2
					id="identity-heading"
					class="text-center text-2xl sm:text-3xl lg:text-4xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-3"
				>
					TASHIF AHMAD KHAN
				</h2>
				<p
					class="text-center text-gray-600 dark:text-gray-300 mb-5 text-base sm:text-lg"
				>
					Engineering Undergrade · Tech Enthusiast · Full Stack Engineer
				</p>
				<div
					class="flex flex-col sm:flex-row justify-center items-center gap-4 mb-4"
				>
					<div class="flex items-center gap-2">
						<Mail className="w-4 h-4 text-orange-500" />
						<a
							href="mailto:developer@tashif.codes"
							class="text-gray-700 dark:text-gray-300 hover:underline text-sm sm:text-base"
							>developer@tashif.codes</a
						>
					</div>
					<div class="flex items-center gap-2">
						<LocationIcon className="w-4 h-4 text-orange-500" />
						<span class="text-gray-700 dark:text-gray-300 text-sm sm:text-base"
							>Delhi, India</span
						>
					</div>
				</div>
				<div class="flex justify-center gap-2 flex-wrap">
					<a
						href="https://www.linkedin.com/in/tashif-ahmad-khan-982304244/"
						target="_blank"
						rel="noopener noreferrer"
						class="inline-flex items-center p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/30 transition"
						aria-label="LinkedIn"
					>
						<Linkedin className="w-4 h-4" />
					</a>
					<a
						href="https://github.com/tashifkhan"
						target="_blank"
						rel="noopener noreferrer"
						class="inline-flex items-center p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition"
						aria-label="GitHub"
					>
						<Github className="w-4 h-4" />
					</a>
					<a
						href="https://portfolio.tashif.codes"
						target="_blank"
						rel="noopener noreferrer"
						class="inline-flex items-center p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 hover:bg-green-50 dark:hover:bg-green-900/30 transition"
						aria-label="Portfolio"
					>
						<Globe className="w-4 h-4" />
					</a>
				</div>
			</section>

			<!-- Skills -->
			<section
				id="skills"
				class="resume-section mb-12"
				aria-labelledby="skills-heading"
			>
				<div class="flex items-center gap-3 mb-6">
					<div class="p-2 rounded-lg bg-orange-100 dark:bg-orange-900/30">
						<Award className="w-5 h-5 text-orange-600 dark:text-orange-400" />
					</div>
					<h2
						id="skills-heading"
						class="text-xl sm:text-2xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
					>
						SKILLS
					</h2>
				</div>
				<div class="grid gap-6 md:grid-cols-2">
					{
						skillCategories.map((cat) => (
							<div class={cardBase + " p-5 pl-7"}>
								<span class={leftBar(`${cat.color}-500`, `${cat.color}-400`)} />
								<span class={glowBar(cat.color)} />
								<h3 class="flex items-center gap-2 font-semibold text-gray-900 dark:text-white mb-3 text-sm uppercase tracking-wide">
									<span
										class={`inline-block w-2 h-2 rounded-full bg-${cat.color}-500`}
									/>
									{cat.label}
								</h3>
								<div class="flex flex-wrap gap-2">
									{cat.items.map((s) => (
										<span class="px-2.5 py-1 rounded-lg bg-gradient-to-b from-gray-100 to-gray-50 dark:from-gray-800 dark:to-gray-700 text-[11px] font-medium text-gray-700 dark:text-gray-300 border border-gray-200/70 dark:border-gray-700/60 hover:border-orange-300/60 dark:hover:border-orange-400/60 transition-colors">
											{s}
										</span>
									))}
								</div>
							</div>
						))
					}
				</div>
			</section>

			<!-- Experience -->
			<section
				id="experience"
				class="resume-section mb-12"
				aria-labelledby="experience-heading"
			>
				<div class="flex items-center gap-3 mb-6">
					<div class="p-2 rounded-lg bg-blue-100 dark:bg-blue-900/30">
						<Calendar className="w-5 h-5 text-blue-600 dark:text-blue-400" />
					</div>
					<h2
						id="experience-heading"
						class="text-xl sm:text-2xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
					>
						EXPERIENCE
					</h2>
				</div>
				<ol class="space-y-6 relative">
					{
						experiences.map((exp) => (
							<li class="relative">
								<div class={cardBase + " pl-7 pr-5 sm:pr-6 py-5"}>
									<span
										class={leftBar(`${exp.color}-500`, `${exp.color}-400`)}
									/>
									<span class={glowBar(exp.color)} />
									<div class="relative z-10 flex flex-col sm:flex-row sm:items-start sm:justify-between gap-3 mb-2">
										<h3 class="text-lg sm:text-xl font-semibold text-gray-900 dark:text-white tracking-tight">
											{exp.company}
										</h3>
										<div class="flex items-center gap-2 flex-wrap">
											<span
												class={`px-2.5 py-1 rounded-full text-xs font-medium bg-${exp.color}-100 dark:bg-${exp.color}-900/40 text-${exp.color}-700 dark:text-${exp.color}-300`}
											>
												{exp.period}
											</span>
											{exp.certificate && (
												<a
													href={exp.certificate}
													target="_blank"
													rel="noopener noreferrer"
													class={`px-2.5 py-1 rounded-full text-xs font-medium bg-${exp.color}-100 dark:bg-${exp.color}-900/40 text-${exp.color}-700 dark:text-${exp.color}-300 hover:bg-${exp.color}-200/70 dark:hover:bg-${exp.color}-800/60 transition-colors`}
												>
													Certificate
												</a>
											)}
										</div>
									</div>
									<p
										class={`text-sm sm:text-base font-medium text-${exp.color}-600 dark:text-${exp.color}-400 mb-3`}
									>
										{exp.role}
									</p>
									<ul class="space-y-2 text-sm sm:text-[15px] leading-relaxed text-gray-700 dark:text-gray-300">
										{exp.points.map((pt) => (
											<li class="flex gap-3">
												<span
													class={`mt-2 w-2 h-2 rounded-full bg-${exp.color}-500 flex-shrink-0`}
												/>
												<span set:html={pt} />
											</li>
										))}
									</ul>
								</div>
							</li>
						))
					}
				</ol>
			</section>

			<!-- Projects -->
			<section
				id="projects"
				class="resume-section mb-12"
				aria-labelledby="projects-heading"
			>
				<div class="flex items-center gap-3 mb-6">
					<div class="p-2 rounded-lg bg-green-100 dark:bg-green-900/30">
						<BookOpen className="w-5 h-5 text-green-600 dark:text-green-400" />
					</div>
					<h2
						id="projects-heading"
						class="text-xl sm:text-2xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
					>
						NOTABLE PROJECTS
					</h2>
				</div>
				<div class="space-y-6">
					{
						projects.map((p) => (
							<div class={cardBase + " p-5 sm:p-6 pl-7"}>
								<span class={leftBar(`${p.color}-500`, `${p.color}-400`)} />
								<span class={glowBar(p.color)} />
								<div class="relative z-10 flex flex-col sm:flex-row sm:items-start sm:justify-between gap-3 mb-2">
									<h3 class="text-lg sm:text-xl font-semibold text-gray-900 dark:text-white tracking-tight">
										{p.title}
									</h3>
									<div class="flex items-center gap-2 flex-wrap">
										{p.links.map((l) => (
											<a
												href={l.url}
												target="_blank"
												rel="noopener noreferrer"
												class={`px-2.5 py-1 rounded-full text-xs font-medium bg-${p.color}-100 dark:bg-${p.color}-900/40 text-${p.color}-700 dark:text-${p.color}-300 hover:bg-${p.color}-200/70 dark:hover:bg-${p.color}-800/60 transition-colors`}
											>
												{l.label}
											</a>
										))}
									</div>
								</div>
								<p
									class={`text-[11px] sm:text-xs font-medium tracking-wide uppercase text-${p.color}-600 dark:text-${p.color}-400 mb-4`}
								>
									{p.stack}
								</p>
								<ul class="space-y-2 text-sm sm:text-[15px] leading-relaxed text-gray-700 dark:text-gray-300">
									{p.points.map((pt) => (
										<li class="flex gap-3">
											<span
												class={`mt-2 w-2 h-2 rounded-full bg-${p.color}-500 flex-shrink-0`}
											/>
											<span set:html={pt} />
										</li>
									))}
								</ul>
							</div>
						))
					}
				</div>
			</section>

			<!-- Education -->
			<section
				id="education"
				class="resume-section mb-12"
				aria-labelledby="education-heading"
			>
				<div class="flex items-center gap-3 mb-6">
					<div class="p-2 rounded-lg bg-orange-100 dark:bg-orange-900/30">
						<MapPin className="w-5 h-5 text-orange-600 dark:text-orange-400" />
					</div>
					<h2
						id="education-heading"
						class="text-xl sm:text-2xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
					>
						EDUCATION
					</h2>
				</div>
				<div class="space-y-6">
					{
						education.map((ed) => (
							<div class={cardBase + " p-5 sm:p-6 pl-7"}>
								<span class={leftBar(`${ed.color}-500`, `${ed.color}-400`)} />
								<span class={glowBar(ed.color)} />
								<div class="relative z-10 flex flex-col sm:flex-row sm:items-start sm:justify-between gap-3 mb-2">
									<h3 class="text-lg sm:text-xl font-semibold text-gray-900 dark:text-white tracking-tight">
										{ed.institute}
									</h3>
									<span
										class={`px-2.5 py-1 h-fit rounded-full text-xs font-medium bg-${ed.color}-100 dark:bg-${ed.color}-900/40 text-${ed.color}-700 dark:text-${ed.color}-300`}
									>
										{ed.period}
									</span>
								</div>
								{ed.degree && (
									<p
										class={`text-sm sm:text-base font-medium text-${ed.color}-600 dark:text-${ed.color}-400 mb-2`}
									>
										{ed.degree}
									</p>
								)}
								{ed.details && (
									<ul class="list-disc pl-5 text-sm sm:text-[15px] text-gray-700 dark:text-gray-300 space-y-1">
										{ed.details.map((d) => (
											<li>{d}</li>
										))}
									</ul>
								)}
							</div>
						))
					}
				</div>
			</section>

			<!-- Positions -->
			<section
				id="positions"
				class="resume-section mb-2"
				aria-labelledby="positions-heading"
			>
				<div class="flex items-center gap-3 mb-6">
					<div class="p-2 rounded-lg bg-indigo-100 dark:bg-indigo-900/30">
						<Users className="w-5 h-5 text-indigo-600 dark:text-indigo-400" />
					</div>
					<h2
						id="positions-heading"
						class="text-xl sm:text-2xl font-bold tracking-tight bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent"
					>
						POSITIONS OF RESPONSIBILITY
					</h2>
				</div>
				<div class="space-y-6">
					{
						positions.map((pos) => (
							<div class={cardBase + " p-5 sm:p-6 pl-7"}>
								<span class={leftBar(`${pos.color}-500`, `${pos.color}-400`)} />
								<span class={glowBar(pos.color)} />
								<div class="relative z-10 flex flex-col sm:flex-row sm:items-start sm:justify-between gap-3 mb-2">
									<h3 class="text-lg sm:text-xl font-semibold text-gray-900 dark:text-white tracking-tight">
										{pos.title}
									</h3>
									<span
										class={`px-2.5 py-1 h-fit rounded-full text-xs font-medium bg-${pos.color}-100 dark:bg-${pos.color}-900/40 text-${pos.color}-700 dark:text-${pos.color}-300`}
									>
										{pos.period}
									</span>
								</div>
								<p
									class={`text-sm sm:text-base font-medium text-${pos.color}-600 dark:text-${pos.color}-400 mb-3`}
								>
									{pos.org}
								</p>
								<ul class="space-y-2 text-sm sm:text-[15px] leading-relaxed text-gray-700 dark:text-gray-300">
									{pos.points.map((pt) => (
										<li class="flex gap-3">
											<span
												class={`mt-2 w-2 h-2 rounded-full bg-${pos.color}-500 flex-shrink-0`}
											/>
											<span>{pt}</span>
										</li>
									))}
								</ul>
							</div>
						))
					}
				</div>
			</section>
		</div>
	</main>
</div>

<!-- Offscreen container for print-resume HTML (must be rendered for html2pdf) -->
<div
	id="print-resume-container"
	style="position:fixed;left:-10000px;top:0;width:800px;background:#ffffff;opacity:0;pointer-events:none;z-index:-1;"
>
</div>

<script>
	// @ts-nocheck
	// Resume navigation and download functionality (preserved from previous implementation)
	const setupResumeInteractions = () => {
		const navLinks = document.querySelectorAll(".resume-nav-link");
		const sections = document.querySelectorAll(".resume-section");

		function updateActiveNavLink(targetId) {
			navLinks.forEach((link) => {
				link.classList.remove(
					"bg-orange-50",
					"dark:bg-orange-900/20",
					"text-orange-600",
					"dark:text-orange-400"
				);
				link.classList.add("text-gray-700", "dark:text-gray-300");
			});
			const activeLink = document.querySelector(`[data-section="${targetId}"]`);
			if (activeLink) {
				activeLink.classList.remove("text-gray-700", "dark:text-gray-300");
				activeLink.classList.add(
					"bg-orange-50",
					"dark:bg-orange-900/20",
					"text-orange-600",
					"dark:text-orange-400"
				);
			}
		}

		function scrollToSection(sectionId) {
			const section = document.getElementById(sectionId);
			if (section) {
				const yOffset = -80;
				const y =
					section.getBoundingClientRect().top + window.pageYOffset + yOffset;
				window.scrollTo({ top: y, behavior: "smooth" });
			}
		}

		navLinks.forEach((link) => {
			link.addEventListener("click", (e) => {
				e.preventDefault();
				const targetId = link.getAttribute("data-section");
				if (targetId) {
					scrollToSection(targetId);
					updateActiveNavLink(targetId);
				}
			});
		});

		const observerOptions = {
			root: null,
			rootMargin: "-10% 0px -60% 0px",
			threshold: [0, 0.1, 0.5, 1],
		};

		const observer = new IntersectionObserver((entries) => {
			let maxEntry = null;
			let maxRatio = 0;
			entries.forEach((entry) => {
				if (entry.isIntersecting && entry.intersectionRatio > maxRatio) {
					maxEntry = entry;
					maxRatio = entry.intersectionRatio;
				}
			});
			if (maxEntry) updateActiveNavLink(maxEntry.target.id);
		}, observerOptions);
		sections.forEach((section) => observer.observe(section));
		if (sections.length > 0) updateActiveNavLink(sections[0].id);

		const downloadBtn = document.querySelector("[data-download-resume]");
		if (downloadBtn) {
			downloadBtn.addEventListener("click", async () => {
				try {
					const container = document.getElementById("print-resume-container");
					if (!container) return;
					container.style.position = "fixed";
					container.style.left = "-10000px";
					container.style.top = "0";
					container.style.width = "800px";
					container.style.background = "#ffffff";
					container.style.opacity = "0";
					container.style.pointerEvents = "none";
					container.style.zIndex = "-1";
					const iframe = document.createElement("iframe");
					iframe.src = "/print-resume";
					iframe.style.width = "800px";
					iframe.style.height = "1200px";
					iframe.style.border = "0";
					container.appendChild(iframe);
					await new Promise((resolve, reject) => {
						iframe.onload = resolve;
						iframe.onerror = reject;
					});
					const doc = iframe.contentDocument || iframe.contentWindow?.document;
					if (!doc) throw new Error("Unable to access iframe document");
					doc.body.style.background = "#ffffff";
					if (doc.fonts && typeof doc.fonts.ready?.then === "function") {
						try {
							await doc.fonts.ready;
						} catch {}
					}
					const imgs = Array.from(doc.images || []);
					await Promise.all(
						imgs.map((img) =>
							img.complete && img.naturalWidth !== 0
								? Promise.resolve()
								: new Promise((resolve) => {
										img.addEventListener("load", resolve, { once: true });
										img.addEventListener("error", resolve, { once: true });
									})
						)
					);
					await new Promise((r) =>
						requestAnimationFrame(() => requestAnimationFrame(r))
					);
					const win = iframe.contentWindow;
					if (!win) throw new Error("No iframe window");
					const cleanup = () => {
						try {
							container.removeChild(iframe);
						} catch {}
					};
					const afterPrint = () => {
						win.removeEventListener?.("afterprint", afterPrint);
						cleanup();
					};
					try {
						win.addEventListener?.("afterprint", afterPrint);
					} catch {}
					win.focus();
					win.print();
					setTimeout(cleanup, 5000);
				} catch (error) {
					console.error("Error generating PDF:", error);
					alert("Failed to generate PDF. Please try again.");
				}
			});
		}
	};
	if (document.readyState === "loading") {
		document.addEventListener("DOMContentLoaded", setupResumeInteractions);
	} else {
		setupResumeInteractions();
	}
</script>
